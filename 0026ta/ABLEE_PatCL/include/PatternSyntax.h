#define COMMAND(a,b,c) ( (a<<24) | (b<<16) | c )
#define ALPG_COMMAND(syntax,command,opt,bit)		syntax_map[syntax] = COMMAND(command, opt, bit);
#define ALPG_CURR_X_COMMAND(syntax,command,opt,bit)	syntax_map[syntax] = COMMAND(command, opt, bit);
#define ALPG_CURR_Y_COMMAND(syntax,command,opt,bit)	syntax_map[syntax] = COMMAND(command, opt, bit);

ALPG_COMMAND("MPAT",			ALPG_MPAT		, 1, 0 )
ALPG_COMMAND("END",				ALPG_MPAT		, 0, 0 )
//	ALPG_COMMAND("INSERT",		ALPG_INSERT	, 0, 0 )
ALPG_COMMAND("SUBROUTINE_BEGIN",	ALPG_MODULE_BEGIN , 1, 0 )
ALPG_COMMAND("SUBROUTINE_END",		ALPG_MODULE_END	 , 0, 0 )
ALPG_COMMAND("MODULE_BEGIN",		ALPG_MODULE_BEGIN , 0, 0 )
ALPG_COMMAND("MODULE_END",		ALPG_MODULE_END	 , 0, 0 )
ALPG_COMMAND("RDX",				ALPG_TEMP	 , 1, 0 )
ALPG_COMMAND("MODE",			ALPG_TEMP	 , 0, 0 )
//ALPG_COMMAND("SET",			ALPG_TEMP	 , 0, 0 )
ALPG_COMMAND("ILMODE",			ALPG_TEMP	 , 0, 0 )
ALPG_COMMAND("1WAY",			ALPG_TEMP	 , 0, 0 )
ALPG_COMMAND("4WAY",			ALPG_TEMP	 , 0, 0 )
//ALPG_COMMAND("MUX",				ALPG_MODE	 , 0, 0 )		//SDM
//ALPG_COMMAND("DATEN",			ALPG_MODE	 , 0, 0 )		//RDSM
/******************************************************************************************************************************************/
//	ALPG_COMMAND("PAUSE"   , SEQ_MODE , 0, 0x20 )	//MODE PAUSE		- T, TM2
//	ALPG_COMMAND("REFRESHA", SEQ_MODE , 1, 0x10 )	//MODE REFRESHA n(64,128,256,512,1024,2048,4096,8192,16384,32768,65536,131072,262144)
//	ALPG_COMMAND("REFRESHB", SEQ_MODE , 1, 0x18 )	// same REFRESHA	- T
	ALPG_COMMAND("PAUSE"   , SEQ_MODE , 0, 0x40 )	//MODE PAUSE		- T, TM2
	ALPG_COMMAND("REFRESHA", SEQ_MODE , 1, 0x20 )	//MODE REFRESHA n(64,128,256,512,1024,2048,4096,8192,16384,32768,65536,131072,262144)
	ALPG_COMMAND("REFRESHB", SEQ_MODE , 1, 0x30 )	// same REFRESHA	- T

//ALPG_COMMAND("PAUSE",			SEQ_MODE		, 0, 0x1 )		// T, TM2
//ALPG_COMMAND("REFRESHA",		SEQ_MODE		, 1, 0x2 )		// 64,128,256,512,1024,2048,4096,8192,16384,32768,65536,131072,262144
//ALPG_COMMAND("REFRESHB",		SEQ_MODE		, 1, 0x3 )			// same REFRESHA T
/*******************************************************************************************************************************************/
// ALPG_COMMAND("PARITY",		ALPG_MODE	 , 0, 0 )		// D0~7->D17 , D8~16->D18
ALPG_COMMAND("XR.OR.ZN" ,		ALPG_MODE	 , 0, 0x0	)
ALPG_COMMAND("XR.OR.ZNB",		ALPG_MODE	 , 0, 0x0	)
ALPG_COMMAND("ZN"    ,			ALPG_MODE	 , 0, 0x1	)
ALPG_COMMAND("ZNB"   ,			ALPG_MODE	 , 0, 0x1	)
ALPG_COMMAND("TPM18" ,			ALPG_MODE	 , 0, 0x0	)		//18bit
ALPG_COMMAND("TPM36" ,			ALPG_MODE	 , 0, 0x2	)		//36bit
ALPG_COMMAND("TP2INV",			ALPG_MODE	 , 0, 0x4   )
//ALPG_COMMAND("ZSET",			ALPG_MODE	 , 0, 0x1 )		//Event1 Z<#
//ALPG_COMMAND("DBM",				ALPG_MODE	 , 0, 0x200 )		//DBM MODE
//ALPG_COMMAND("BWPEM",			ALPG_MODE	 , 0, BWPEM )
//ALPG_COMMAND("DFCA1",			ALPG_MODE	 , 0, DFCA1 )	//1~6 (DSC Field)
//ALPG_COMMAND("DFCA2",			ALPG_MODE	 , 0, DFCA2 )	//1~6 (DSC Field)
//ALPG_COMMAND("DFCA3",			ALPG_MODE	 , 0, DFCA3 )	//1~6 (DSC Field)
//ALPG_COMMAND("DFCA4",			ALPG_MODE	 , 0, DFCA4 )	//1~6 (DSC Field)
//ALPG_COMMAND("DFCA5",			ALPG_MODE	 , 0, DFCA5 )	//1~6 (DSC Field)
//ALPG_COMMAND("DFCA6",			ALPG_MODE	 , 0, DFCA6 )	//1~6 (DSC Field)
//ALPG_COMMAND("DFCB1",			ALPG_MODE	 , 0, DFCB1 )	// same above
//ALPG_COMMAND("DFCB2",			ALPG_MODE	 , 0, DFCB2 )	// same above
//ALPG_COMMAND("DFCB3",			ALPG_MODE	 , 0, DFCB3 )	// same above
//ALPG_COMMAND("DFCB4",			ALPG_MODE	 , 0, DFCB4 )	// same above
//ALPG_COMMAND("DFCB5",			ALPG_MODE	 , 0, DFCB5 )	// same above
//ALPG_COMMAND("DFCB6",			ALPG_MODE	 , 0, DFCB6 )	// same above
//ALPG_COMMAND("ECBM",			ALPG_MODE	 , 0, ECBM )		// extent , CBM Memory
//ALPG_COMMAND("DBMLP",			ALPG_MODE	 , 0, DBMLP )	// DBM Loop mode
//ALPG_COMMAND("CYPC15",		ALPG_MODE	 , 0, CYPC15 )
ALPG_COMMAND("DBFORM1",			ALPG_MODE	 , 0, 0x0 )
ALPG_COMMAND("DBFORM2",			ALPG_MODE	 , 0, 0x2 )
ALPG_COMMAND("DBFORM3",			ALPG_MODE	 , 0, 0x4 )
ALPG_COMMAND("DBFORM4",			ALPG_MODE	 , 0, 0x6 )
//ALPG_COMMAND("RDBMA",			ALPG_MODE	 , 0, RDBMA	 )	//real time DBMA register
//ALPG_COMMAND("MSM",			ALPG_MODE	 , 0, MSM	 )

ALPG_COMMAND("REGISTER",		ALPG_TEMP	 , 0, REGISTER )	//1:# 2:W,R,C0... 3:# or SET 4:# 3 0R<# 5:F0~F10
///////////////////// SEQ REGISTER //////////////////////////////////
	ALPG_COMMAND("IDX0"    , ALPG_REG4, 0, 0x00 )
	ALPG_COMMAND("IDX1"    , ALPG_REG4, 0, 0x04 )
	ALPG_COMMAND("IDX2"    , ALPG_REG4, 0, 0x08 )
	ALPG_COMMAND("IDX3"    , ALPG_REG4, 0, 0x0C )
	ALPG_COMMAND("IDX4"    , ALPG_REG4, 0, 0x10 )
	ALPG_COMMAND("IDX5"    , ALPG_REG4, 0, 0x14 )
	ALPG_COMMAND("IDX6"    , ALPG_REG4, 0, 0x18 )
	ALPG_COMMAND("IDX7"    , ALPG_REG4, 0, 0x1C )
	ALPG_COMMAND("IDX8"    , ALPG_REG4, 0, 0x20 )
	ALPG_COMMAND("IDX9"    , ALPG_REG4, 0, 0x24 )
	ALPG_COMMAND("IDX10"   , ALPG_REG4, 0, 0x28 )
	ALPG_COMMAND("IDX11"   , ALPG_REG4, 0, 0x2C )
	ALPG_COMMAND("IDX12"   , ALPG_REG4, 0, 0x30 )
	ALPG_COMMAND("IDX13"   , ALPG_REG4, 0, 0x34 )
	ALPG_COMMAND("IDX14"   , ALPG_REG4, 0, 0x38 )
	ALPG_COMMAND("IDX15"   , ALPG_REG4, 0, 0x3C )

	ALPG_COMMAND("MLOOP"   , ALPG_REG4, 0, 0x74 )

	ALPG_COMMAND("CFLG"    , ALPG_REG2, 0, 0x4C )
//	ALPG_COMMAND("STA"     , ALPG_REG2, 0, 0x50 )
	ALPG_COMMAND("ISP"     , ALPG_REG2, 0, 0x54 )
	ALPG_COMMAND("BAR"     , ALPG_REG2, 0, 0x58 )
	ALPG_COMMAND("TIMER"   , ALPG_REG2, 0, 0x60 )
	ALPG_COMMAND("TREFRESH", ALPG_REG2, 0, 0x64 )
	ALPG_COMMAND("TPAUSE"  , ALPG_REG2, 0, 0x68 )
	ALPG_COMMAND("TJET"    , ALPG_REG2, 0, 0x6C )

//////////////////////////////////////////////////////
//ALPG_COMMAND("STA",				ALPG_REG2	 , 0, 0x40 )
//ALPG_COMMAND("ISP",				ALPG_REG2	 , 0, 0x44 )
//ALPG_COMMAND("BAR",				ALPG_REG2	 , 0, 0x48 )
//ALPG_COMMAND("CFLG",			ALPG_REG2	 , 0, 0x4c )
//ALPG_COMMAND("TIMER",			ALPG_REG2	 , 0, 0x50 )
//ALPG_COMMAND("TREFRESH",		ALPG_REG2	 , 0, 0x54 )
//ALPG_COMMAND("TPAUSE",			ALPG_REG2	 , 0, 0x58 )

//	ALPG_COMMAND("PC",			ALPG_REG2	 , 3, 0 )
ALPG_COMMAND("START",			ALPG_REG2	 , 3, 1 )
//////////////////////// ALPG REGISTER //////////////////////////////
ALPG_COMMAND("PORT",			ALPG_REG0		, 0, 0 )
ALPG_COMMAND("DIAG",			ALPG_REG2		, 2, 0x10 )
ALPG_COMMAND("DRE1",			ALPG_REG2		, 2, 0	)
ALPG_COMMAND("DRE2",			ALPG_REG2		, 2, 1	)
ALPG_COMMAND("DRE3",			ALPG_REG2		, 2, 2	)
ALPG_COMMAND("DRE4",			ALPG_REG2		, 2, 3	)
ALPG_COMMAND("CPE1",			ALPG_REG2		, 2, 4	)
ALPG_COMMAND("CPE2",			ALPG_REG2		, 2, 5	)
ALPG_COMMAND("CPE3",			ALPG_REG2		, 2, 6	)
ALPG_COMMAND("CPE4",			ALPG_REG2		, 2, 7	)
ALPG_COMMAND("CPE5",			ALPG_REG2		, 2, 8	)
ALPG_COMMAND("CPE6",			ALPG_REG2		, 2, 9	)
ALPG_COMMAND("CPE7",			ALPG_REG2		, 2, 10 )
ALPG_COMMAND("CPE8",			ALPG_REG2		, 2, 11 )
ALPG_COMMAND("CPE9",			ALPG_REG2		, 2, 12 )

//////////////////////////////////////////////////////
	ALPG_COMMAND("D1B"     , ALPG_REG4, 1, 0x00 )
	ALPG_COMMAND("D1C"     , ALPG_REG4, 1, 0x04 )
	ALPG_COMMAND("D1D"     , ALPG_REG4, 1, 0x08 )
	ALPG_COMMAND("D1E"     , ALPG_REG4, 1, 0x0C )
	ALPG_COMMAND("D1F"     , ALPG_REG4, 1, 0x10 )
	ALPG_COMMAND("D1G"     , ALPG_REG4, 1, 0x14 )
	ALPG_COMMAND("D1H"     , ALPG_REG4, 1, 0x18 )
	ALPG_COMMAND("D2B"     , ALPG_REG4, 1, 0x1C )
	ALPG_COMMAND("D2C"     , ALPG_REG4, 1, 0x20 )
	ALPG_COMMAND("D2D"     , ALPG_REG4, 1, 0x24 )
	ALPG_COMMAND("LMAX"    , ALPG_REG4, 1, 0x28 )
	ALPG_COMMAND("HMAX"    , ALPG_REG4, 1, 0x2C )
	ALPG_COMMAND("XMAX"    , ALPG_REG4, 1, 0x30 )
	ALPG_COMMAND("YMAX"    , ALPG_REG4, 1, 0x34 )
	ALPG_COMMAND("ZMAX"    , ALPG_REG4, 1, 0x38 )

	ALPG_COMMAND("ND2"    , ALPG_REG4, 1, 0x100 )
	ALPG_COMMAND("ND3"    , ALPG_REG4, 1, 0x104 )
	ALPG_COMMAND("ND4"    , ALPG_REG4, 1, 0x108 )
	ALPG_COMMAND("ND5"    , ALPG_REG4, 1, 0x10C )
	ALPG_COMMAND("ND6"    , ALPG_REG4, 1, 0x110 )
	ALPG_COMMAND("ND7"    , ALPG_REG4, 1, 0x114 )
	ALPG_COMMAND("ND8"    , ALPG_REG4, 1, 0x118 )
	ALPG_COMMAND("ND9"    , ALPG_REG4, 1, 0x11C )
	ALPG_COMMAND("ND10"   , ALPG_REG4, 1, 0x120 )
	ALPG_COMMAND("ND11"   , ALPG_REG4, 1, 0x124 )
	ALPG_COMMAND("ND12"   , ALPG_REG4, 1, 0x128 )
	ALPG_COMMAND("ND13"   , ALPG_REG4, 1, 0x12C )
	ALPG_COMMAND("ND14"   , ALPG_REG4, 1, 0x130 )
	ALPG_COMMAND("ND15"   , ALPG_REG4, 1, 0x134 )
	ALPG_COMMAND("ND16"   , ALPG_REG4, 1, 0x138 )
	ALPG_COMMAND("ND17"   , ALPG_REG4, 1, 0x13C )
	ALPG_COMMAND("ND18"   , ALPG_REG4, 1, 0x140 )
	ALPG_COMMAND("ND19"   , ALPG_REG4, 1, 0x144 )
	ALPG_COMMAND("ND20"   , ALPG_REG4, 1, 0x148 )
	ALPG_COMMAND("ND21"   , ALPG_REG4, 1, 0x14C )
	ALPG_COMMAND("ND22"   , ALPG_REG4, 1, 0x150 )
	ALPG_COMMAND("ND23"   , ALPG_REG4, 1, 0x154 )
	ALPG_COMMAND("ND24"   , ALPG_REG4, 1, 0x158 )
	ALPG_COMMAND("ND25"   , ALPG_REG4, 1, 0x15C )
	ALPG_COMMAND("ND26"   , ALPG_REG4, 1, 0x160 )
	ALPG_COMMAND("ND27"   , ALPG_REG4, 1, 0x164 )
	ALPG_COMMAND("ND28"   , ALPG_REG4, 1, 0x168 )
	ALPG_COMMAND("ND29"   , ALPG_REG4, 1, 0x16C )
	ALPG_COMMAND("ND30"   , ALPG_REG4, 1, 0x170 )
	ALPG_COMMAND("ND31"   , ALPG_REG4, 1, 0x174 )
	ALPG_COMMAND("ND32"   , ALPG_REG4, 1, 0x178 )

	ALPG_COMMAND("BD2"    , ALPG_REG4, 1, 0x180 )
	ALPG_COMMAND("BD3"    , ALPG_REG4, 1, 0x184 )
	ALPG_COMMAND("BD4"    , ALPG_REG4, 1, 0x188 )
	ALPG_COMMAND("BD5"    , ALPG_REG4, 1, 0x18C )
	ALPG_COMMAND("BD6"    , ALPG_REG4, 1, 0x190 )
	ALPG_COMMAND("BD7"    , ALPG_REG4, 1, 0x194 )
	ALPG_COMMAND("BD8"    , ALPG_REG4, 1, 0x198 )
	ALPG_COMMAND("BD9"    , ALPG_REG4, 1, 0x19C )
	ALPG_COMMAND("BD10"   , ALPG_REG4, 1, 0x1A0 )
	ALPG_COMMAND("BD11"   , ALPG_REG4, 1, 0x1A4 )
	ALPG_COMMAND("BD12"   , ALPG_REG4, 1, 0x1A8 )
	ALPG_COMMAND("BD13"   , ALPG_REG4, 1, 0x1AC )
	ALPG_COMMAND("BD14"   , ALPG_REG4, 1, 0x1B0 )
	ALPG_COMMAND("BD15"   , ALPG_REG4, 1, 0x1B4 )
	ALPG_COMMAND("BD16"   , ALPG_REG4, 1, 0x1B8 )
	ALPG_COMMAND("BD17"   , ALPG_REG4, 1, 0x1BC )
	ALPG_COMMAND("BD18"   , ALPG_REG4, 1, 0x1C0 )
	ALPG_COMMAND("BD19"   , ALPG_REG4, 1, 0x1C4 )
	ALPG_COMMAND("BD20"   , ALPG_REG4, 1, 0x1C8 )
	ALPG_COMMAND("BD21"   , ALPG_REG4, 1, 0x1CC )
	ALPG_COMMAND("BD22"   , ALPG_REG4, 1, 0x1D0 )
	ALPG_COMMAND("BD23"   , ALPG_REG4, 1, 0x1D4 )
	ALPG_COMMAND("BD24"   , ALPG_REG4, 1, 0x1D8 )
	ALPG_COMMAND("BD25"   , ALPG_REG4, 1, 0x1DC )
	ALPG_COMMAND("BD26"   , ALPG_REG4, 1, 0x1E0 )
	ALPG_COMMAND("BD27"   , ALPG_REG4, 1, 0x1E4 )
	ALPG_COMMAND("BD28"   , ALPG_REG4, 1, 0x1E8 )
	ALPG_COMMAND("BD29"   , ALPG_REG4, 1, 0x1EC )
	ALPG_COMMAND("BD30"   , ALPG_REG4, 1, 0x1F0 )
	ALPG_COMMAND("BD31"   , ALPG_REG4, 1, 0x1F4 )
	ALPG_COMMAND("BD32"   , ALPG_REG4, 1, 0x1F8 )

	ALPG_COMMAND("L1"    , ALPG_REG4, 1, 0x200 )
	ALPG_COMMAND("L2"    , ALPG_REG4, 1, 0x220 )
	ALPG_COMMAND("L3"    , ALPG_REG4, 1, 0x240 )
	ALPG_COMMAND("L4"    , ALPG_REG4, 1, 0x260 )
	ALPG_COMMAND("L1A"   , ALPG_REG4, 1, 0x200 )
	ALPG_COMMAND("L1B"   , ALPG_REG4, 1, 0x204 )
	ALPG_COMMAND("L1C"   , ALPG_REG4, 1, 0x208 )
	ALPG_COMMAND("L1D"   , ALPG_REG4, 1, 0x20C )
	ALPG_COMMAND("L1E"   , ALPG_REG4, 1, 0x210 )
	ALPG_COMMAND("L1F"   , ALPG_REG4, 1, 0x214 )
	ALPG_COMMAND("L1G"   , ALPG_REG4, 1, 0x218 )
	ALPG_COMMAND("L1H"   , ALPG_REG4, 1, 0x21C )
	ALPG_COMMAND("L2A"   , ALPG_REG4, 1, 0x220 )
	ALPG_COMMAND("L2B"   , ALPG_REG4, 1, 0x224 )
	ALPG_COMMAND("L2C"   , ALPG_REG4, 1, 0x228 )
	ALPG_COMMAND("L2D"   , ALPG_REG4, 1, 0x22C )
	ALPG_COMMAND("L2E"   , ALPG_REG4, 1, 0x230 )
	ALPG_COMMAND("L2F"   , ALPG_REG4, 1, 0x234 )
	ALPG_COMMAND("L2G"   , ALPG_REG4, 1, 0x238 )
	ALPG_COMMAND("L2H"   , ALPG_REG4, 1, 0x23C )
	ALPG_COMMAND("L3A"   , ALPG_REG4, 1, 0x240 )
	ALPG_COMMAND("L3B"   , ALPG_REG4, 1, 0x244 )
	ALPG_COMMAND("L3C"   , ALPG_REG4, 1, 0x248 )
	ALPG_COMMAND("L3D"   , ALPG_REG4, 1, 0x24C )
	ALPG_COMMAND("L3E"   , ALPG_REG4, 1, 0x250 )
	ALPG_COMMAND("L3F"   , ALPG_REG4, 1, 0x254 )
	ALPG_COMMAND("L3G"   , ALPG_REG4, 1, 0x258 )
	ALPG_COMMAND("L3H"   , ALPG_REG4, 1, 0x25C )
	ALPG_COMMAND("L4A"   , ALPG_REG4, 1, 0x260 )
	ALPG_COMMAND("L4B"   , ALPG_REG4, 1, 0x264 )
	ALPG_COMMAND("L4C"   , ALPG_REG4, 1, 0x268 )
	ALPG_COMMAND("L4D"   , ALPG_REG4, 1, 0x26C )
	ALPG_COMMAND("L4E"   , ALPG_REG4, 1, 0x270 )
	ALPG_COMMAND("L4F"   , ALPG_REG4, 1, 0x274 )
	ALPG_COMMAND("L4G"   , ALPG_REG4, 1, 0x278 )
	ALPG_COMMAND("L4H"   , ALPG_REG4, 1, 0x27C )

	ALPG_COMMAND("S1A"   , ALPG_REG4, 1, 0x300 )
	ALPG_COMMAND("S_TEMP", ALPG_REG4, 1, 0x304 )
	ALPG_COMMAND("V1A"   , ALPG_REG4, 1, 0x310 )
	ALPG_COMMAND("V_TEMP", ALPG_REG4, 1, 0x314 )
//////////////////////////////////////1/////////////

	ALPG_COMMAND("BYTEMASK", ALPG_REG4, 4, 0x0 )
	ALPG_COMMAND("FPSEL"   , ALPG_REG4, 4, 0x8 )

////////////////////////// SET ////////////////////////////////////
//////////////////////////////////////////////////////
	ALPG_COMMAND("XH"      , ALPG_SET , 0, 0x1)
	ALPG_COMMAND("XH<"     , ALPG_SET , 0, 0x1)
	ALPG_COMMAND("D1"      , ALPG_SET , 0, 0x2)
	ALPG_COMMAND("D1<"     , ALPG_SET , 0, 0x2)
	ALPG_COMMAND("D1A"     , ALPG_SET , 0, 0x2)
	ALPG_COMMAND("D1A<"    , ALPG_SET , 0, 0x2)
	ALPG_COMMAND("D3B"     , ALPG_SET , 0, 0x3)
	ALPG_COMMAND("D3B<"    , ALPG_SET , 0, 0x3)
	ALPG_COMMAND("NH"      , ALPG_SET , 0, 0x4)
	ALPG_COMMAND("NH<"     , ALPG_SET , 0, 0x4)
	ALPG_COMMAND("XOS"     , ALPG_SET , 0, 0x6)
	ALPG_COMMAND("XOS<"    , ALPG_SET , 0, 0x6)
//	ALPG_COMMAND("XT"      , ALPG_SET , 0, 0x7)	 //case ALPG_ADDR_SRC:에서 DSET과 XT를 구분하여 처리
	ALPG_COMMAND("XT<"     , ALPG_SET , 0, 0x7)
	ALPG_COMMAND("ZD"      , ALPG_SET , 0, 0x8)
	ALPG_COMMAND("ZD<"     , ALPG_SET , 0, 0x8)
//	ALPG_COMMAND("ND"      , ALPG_SET , 0, 0x9)	//2023.06.13 - kwmoon(comment fatric)
//	ALPG_COMMAND("ND<"     , ALPG_SET , 0, 0x9)	//2023.06.13 - kwmoon(comment fatric)
//	ALPG_COMMAND("ND1"     , ALPG_SET , 0, 0x9)	//2023.06.13 - kwmoon(comment fatric)
//	ALPG_COMMAND("ND1<"    , ALPG_SET , 0, 0x9)	//2023.06.13 - kwmoon(comment fatric)

	ALPG_COMMAND("D1B"     , ALPG_SET , 0, 0x5)	//Append for HOT	//2023.06.13 - kwmoon(add fatric)
	ALPG_COMMAND("D1B<"    , ALPG_SET , 0, 0x5)	//Append for HOT	//2023.06.13 - kwmoon(add fatric)
	ALPG_COMMAND("D1C"     , ALPG_SET , 0, 0x9)	//Append for HOT	//2023.06.13 - kwmoon(add fatric)
	ALPG_COMMAND("D1C<"    , ALPG_SET , 0, 0x9)	//Append for HOT	//2023.06.13 - kwmoon(add fatric)	
	ALPG_COMMAND("D1D"     , ALPG_SET , 0, 0xB)	//Append for HOT	//2023.06.13 - kwmoon(add fatric)
	ALPG_COMMAND("D1D<"    , ALPG_SET , 0, 0xB)	//Append for HOT	//2023.06.13 - kwmoon(add fatric)
	ALPG_COMMAND("D1E"     , ALPG_SET , 0, 0xC)	//Append for HOT	//2023.06.13 - kwmoon(add fatric)
	ALPG_COMMAND("D1E<"    , ALPG_SET , 0, 0xC)	//Append for HOT	//2023.06.13 - kwmoon(add fatric)
	ALPG_COMMAND("D1F"     , ALPG_SET , 0, 0xD)	//Append for HOT	//2023.06.13 - kwmoon(add fatric)
	ALPG_COMMAND("D1F<"    , ALPG_SET , 0, 0xD)	//Append for HOT	//2023.06.13 - kwmoon(add fatric)
	ALPG_COMMAND("D1G"     , ALPG_SET , 0, 0xE)	//Append for HOT	//2023.06.13 - kwmoon(add fatric)
	ALPG_COMMAND("D1G<"    , ALPG_SET , 0, 0xE)	//Append for HOT	//2023.06.13 - kwmoon(add fatric)
	ALPG_COMMAND("D1H"     , ALPG_SET , 0, 0xF)	//Append for HOT	//2023.06.13 - kwmoon(add fatric)
	ALPG_COMMAND("D1H<"    , ALPG_SET , 0, 0xF)	//Append for HOT	//2023.06.13 - kwmoon(add fatric)

	ALPG_COMMAND("YH"      , ALPG_SET , 1, 0x1)
	ALPG_COMMAND("YH<"     , ALPG_SET , 1, 0x1)
	ALPG_COMMAND("D2"      , ALPG_SET , 1, 0x2)
	ALPG_COMMAND("D2<"     , ALPG_SET , 1, 0x2)
	ALPG_COMMAND("D2A"     , ALPG_SET , 1, 0x2)
	ALPG_COMMAND("D2A<"    , ALPG_SET , 1, 0x2)
	ALPG_COMMAND("D4B"     , ALPG_SET , 1, 0x3)
	ALPG_COMMAND("D4B<"    , ALPG_SET , 1, 0x3)
	ALPG_COMMAND("BH"      , ALPG_SET , 1, 0x4)
	ALPG_COMMAND("BH<"     , ALPG_SET , 1, 0x4)
	ALPG_COMMAND("ZH"      , ALPG_SET , 1, 0x5)
	ALPG_COMMAND("ZH<"     , ALPG_SET , 1, 0x5)
	ALPG_COMMAND("YOS"     , ALPG_SET , 1, 0x6)
	ALPG_COMMAND("YOS<"    , ALPG_SET , 1, 0x6)
//	ALPG_COMMAND("YT"      , ALPG_SET , 1, 0x7)	//case ALPG_ADDR_SRC:에서 DSET과 YT를 구분하여 처리
	ALPG_COMMAND("YT<"     , ALPG_SET , 1, 0x7)
	ALPG_COMMAND("Z"       , ALPG_SET , 1, 0x8)
	ALPG_COMMAND("Z<"      , ALPG_SET , 1, 0x8)
	ALPG_COMMAND("BD"      , ALPG_SET , 1, 0x9)
	ALPG_COMMAND("BD1"     , ALPG_SET , 1, 0x9)
	ALPG_COMMAND("BD1<"    , ALPG_SET , 1, 0x9)

	ALPG_COMMAND("TP"      , ALPG_SET , 2, 0x1)
	ALPG_COMMAND("TP1"     , ALPG_SET , 2, 0x1)
	ALPG_COMMAND("TP<"     , ALPG_SET , 2, 0x1)
	ALPG_COMMAND("TP1<"    , ALPG_SET , 2, 0x1)
	ALPG_COMMAND("TPH"     , ALPG_SET , 2, 0x2)
	ALPG_COMMAND("TPH<"    , ALPG_SET , 2, 0x2)
	ALPG_COMMAND("TPH1"    , ALPG_SET , 2, 0x2)
	ALPG_COMMAND("TPH1<"   , ALPG_SET , 2, 0x2)
	ALPG_COMMAND("D5"      , ALPG_SET , 2, 0x3)
	ALPG_COMMAND("D5<"     , ALPG_SET , 2, 0x3)
	ALPG_COMMAND("DCMR"    , ALPG_SET , 2, 0x4)
	ALPG_COMMAND("DCMR<"   , ALPG_SET , 2, 0x4)
	ALPG_COMMAND("DCMR1"   , ALPG_SET , 2, 0x4)
	ALPG_COMMAND("DCMR1<"  , ALPG_SET , 2, 0x4)
	ALPG_COMMAND("XMASK"   , ALPG_SET , 2, 0x5)
	ALPG_COMMAND("XMASK<"  , ALPG_SET , 2, 0x5)
	ALPG_COMMAND("CBMA"    , ALPG_SET , 2, 0x6)
	ALPG_COMMAND("CBMA<"   , ALPG_SET , 2, 0x6)
	ALPG_COMMAND("RCD"     , ALPG_SET , 2, 0x7)
	ALPG_COMMAND("RCD<"    , ALPG_SET , 2, 0x7)
	ALPG_COMMAND("DSD"     , ALPG_SET , 2, 0x8)
	ALPG_COMMAND("DSD<"    , ALPG_SET , 2, 0x8)
	ALPG_COMMAND("DBMAR"   , ALPG_SET , 2, 0x9)
	ALPG_COMMAND("DBMAR<"  , ALPG_SET , 2, 0x9)
///////////////////////////////////////////////////////////////////////////
	ALPG_COMMAND("TPH1A"  , ALPG_SET , 2, 0xB)
	ALPG_COMMAND("TPH1A<" , ALPG_SET , 2, 0xB)
	ALPG_COMMAND("TPH1B"  , ALPG_SET , 2, 0xC)
	ALPG_COMMAND("TPH1B<" , ALPG_SET , 2, 0xC)
	ALPG_COMMAND("TPH1C"  , ALPG_SET , 2, 0xD)
	ALPG_COMMAND("TPH1C<" , ALPG_SET , 2, 0xD)
	ALPG_COMMAND("TPH1D"  , ALPG_SET , 2, 0xE)
	ALPG_COMMAND("TPH1D<" , ALPG_SET , 2, 0xE)
///////////////////////////////////////////////////////////////////////////

	ALPG_COMMAND("TP2"     , ALPG_SET , 3, 0x1)
	ALPG_COMMAND("TP2<"    , ALPG_SET , 3, 0x1)
	ALPG_COMMAND("TPH2"    , ALPG_SET , 3, 0x2)
	ALPG_COMMAND("TPH2<"   , ALPG_SET , 3, 0x2)
	ALPG_COMMAND("D6"      , ALPG_SET , 3, 0x3)
	ALPG_COMMAND("D6<"     , ALPG_SET , 3, 0x3)
	ALPG_COMMAND("DCMR2"   , ALPG_SET , 3, 0x4)
	ALPG_COMMAND("DCMR2<"  , ALPG_SET , 3, 0x4)
	ALPG_COMMAND("YMASK"   , ALPG_SET , 3, 0x5)
	ALPG_COMMAND("YMASK<"  , ALPG_SET , 3, 0x5)
	ALPG_COMMAND("CCD"     , ALPG_SET , 3, 0x6)
	ALPG_COMMAND("CCD<"    , ALPG_SET , 3, 0x6)
///////////////////////////////////////////////////////////////////////////
	ALPG_COMMAND("TPH2A"  , ALPG_SET , 3, 0xB)
	ALPG_COMMAND("TPH2A<" , ALPG_SET , 3, 0xB)
	ALPG_COMMAND("TPH2B"  , ALPG_SET , 3, 0xC)
	ALPG_COMMAND("TPH2B<" , ALPG_SET , 3, 0xC)
	ALPG_COMMAND("TPH2C"  , ALPG_SET , 3, 0xD)
	ALPG_COMMAND("TPH2C<" , ALPG_SET , 3, 0xD)
	ALPG_COMMAND("TPH2D"  , ALPG_SET , 3, 0xE)
	ALPG_COMMAND("TPH2D<" , ALPG_SET , 3, 0xE)
///////////////////////////////////////////////////////////////////////////
//	ALPG_COMMAND("DBMAPO"  , ALPG_SET , 3, 0xa)
//	ALPG_COMMAND("DBMAPO<" , ALPG_SET , 3, 0xa)
//////////////////////////////////////////////////////


//	ALPG_COMMAND("BD2",			ALPG_SET 	, 0, 10)
//	ALPG_COMMAND("BD2<",			ALPG_SET 	, 0, 10)
//	ALPG_COMMAND("BD3",			ALPG_SET		, 0, 11)
//	ALPG_COMMAND("BD3<",			ALPG_SET		, 0, 11)
//	ALPG_COMMAND("BD4",			ALPG_SET		, 0, 12)
//	ALPG_COMMAND("BD4<",			ALPG_SET		, 0, 12)
//	ALPG_COMMAND("BD5",			ALPG_SET		, 0, 13)
//	ALPG_COMMAND("BD5<",			ALPG_SET		, 0, 13)
//	ALPG_COMMAND("BD6",			ALPG_SET		, 0, 14)
//	ALPG_COMMAND("BD6<",			ALPG_SET		, 0, 14)
//	ALPG_COMMAND("BD7",			ALPG_SET		, 0, 15)
//	ALPG_COMMAND("BD7<",			ALPG_SET		, 0, 15)

//	ALPG_COMMAND("NH",			ALPG_SET		, 1, 8)
//	ALPG_COMMAND("NH<",			ALPG_SET		, 1, 8)
//	ALPG_COMMAND("ND1",			ALPG_SET		, 1, 9)
//	ALPG_COMMAND("ND1<",			ALPG_SET		, 1, 9)
//	ALPG_COMMAND("ND2",			ALPG_SET		, 1, 10)
//	ALPG_COMMAND("ND2<",			ALPG_SET		, 1, 10)
//	ALPG_COMMAND("ND3",			ALPG_SET		, 1, 11)
//	ALPG_COMMAND("ND3<",			ALPG_SET		, 1, 11)
//	ALPG_COMMAND("ND4",			ALPG_SET		, 1, 12)
//	ALPG_COMMAND("ND4<",			ALPG_SET		, 1, 12)
//	ALPG_COMMAND("ND5",			ALPG_SET		, 1, 13)
//	ALPG_COMMAND("ND5<",			ALPG_SET		, 1, 13)
//	ALPG_COMMAND("ND6",			ALPG_SET		, 1, 14)
//	ALPG_COMMAND("ND6<",			ALPG_SET		, 1, 14)
//	ALPG_COMMAND("ND7",			ALPG_SET		, 1, 15)
//	ALPG_COMMAND("ND7<",			ALPG_SET		, 1, 15)

	//for DDR4
//	ALPG_COMMAND("BD8" ,			ALPG_SET		, 2,	8)
//	ALPG_COMMAND("BD8<" ,			ALPG_SET		, 2,	8)
//	ALPG_COMMAND("BD9" ,			ALPG_SET		, 2,	9)
//	ALPG_COMMAND("BD9<" ,			ALPG_SET		, 2,	9)
//	ALPG_COMMAND("BD10",			ALPG_SET		, 2, 10)
//	ALPG_COMMAND("BD10<",			ALPG_SET		, 2, 10)
//	ALPG_COMMAND("BD11",			ALPG_SET		, 2, 11)
//	ALPG_COMMAND("BD11<",			ALPG_SET		, 2, 11)
//	ALPG_COMMAND("BD12",			ALPG_SET		, 2, 12)
//	ALPG_COMMAND("BD12<",			ALPG_SET		, 2, 12)
//	ALPG_COMMAND("BD13",			ALPG_SET		, 2, 13)
//	ALPG_COMMAND("BD13<",			ALPG_SET		, 2, 13)
//	ALPG_COMMAND("BD14",			ALPG_SET		, 2, 14)
//	ALPG_COMMAND("BD14<",			ALPG_SET		, 2, 14)
//	ALPG_COMMAND("BD15",			ALPG_SET		, 2, 15)
//	ALPG_COMMAND("BD15<",			ALPG_SET		, 2, 15)

	//DDR4
//	ALPG_COMMAND("ND8" ,			ALPG_SET		, 3,	8)
//	ALPG_COMMAND("ND8<" ,			ALPG_SET		, 3,	8)
//	ALPG_COMMAND("ND9" ,			ALPG_SET		, 3,	9)
//	ALPG_COMMAND("ND9<" ,			ALPG_SET		, 3,	9)
//	ALPG_COMMAND("ND10",			ALPG_SET		, 3, 10)
//	ALPG_COMMAND("ND10<",			ALPG_SET		, 3, 10)
//	ALPG_COMMAND("ND11",			ALPG_SET		, 3, 11)
//	ALPG_COMMAND("ND11<",			ALPG_SET		, 3, 11)
//	ALPG_COMMAND("ND12",			ALPG_SET		, 3, 12)
//	ALPG_COMMAND("ND12<",			ALPG_SET		, 3, 12)
//	ALPG_COMMAND("ND13",			ALPG_SET		, 3, 13)
//	ALPG_COMMAND("ND13<",			ALPG_SET		, 3, 13)
//	ALPG_COMMAND("ND14",			ALPG_SET		, 3, 14)
//	ALPG_COMMAND("ND14<",			ALPG_SET		, 3, 14)
//	ALPG_COMMAND("ND15",			ALPG_SET		, 3, 15)
//	ALPG_COMMAND("ND15<",			ALPG_SET		, 3, 15)

	ALPG_COMMAND("ARIRAM_DEFINE",		APLG_ARIRAM	, 0, 0 )
	ALPG_COMMAND("ADDRESS_DEFINE",	APLG_ADDRESS		, 0, 0 )

	ALPG_COMMAND("BURST_BLOCK_BEGIN",	ALPG_BURST_START, 0, 0 )
	ALPG_COMMAND("BURST_BLOCK_END",	ALPG_BURST_END	, 0, 0 )
	ALPG_COMMAND("VS1",			ALPG_BURST		, 1, 1 )
	ALPG_COMMAND("VS2",			ALPG_BURST		, 1, 2 )
	ALPG_COMMAND("VS3",			ALPG_BURST		, 1, 3 )
	ALPG_COMMAND("VS4",			ALPG_BURST		, 1, 4 )
	ALPG_COMMAND("IN1",			ALPG_BURST		, 2, 1 )
	ALPG_COMMAND("IN2",			ALPG_BURST		, 2, 2 )
	ALPG_COMMAND("IN3",			ALPG_BURST		, 2, 3 )
	ALPG_COMMAND("IN4",			ALPG_BURST		, 2, 4 )
	ALPG_COMMAND("IN5",			ALPG_BURST		, 2, 5 )
	ALPG_COMMAND("IN6",			ALPG_BURST		, 2, 6 )
	ALPG_COMMAND("IN6",			ALPG_BURST		, 2, 7 )
	ALPG_COMMAND("IN8",			ALPG_BURST		, 2, 8 )
	ALPG_COMMAND("INH1",			ALPG_BURST		, 3, 1 )
	ALPG_COMMAND("INH2",			ALPG_BURST		, 3, 2 )
//	ALPG_COMMAND("WAIT",			ALPG_BURST		, 0, 13 )
	ALPG_COMMAND("TIME",			ALPG_BURST		, 1, 14 )
	ALPG_COMMAND("STISP",			ALPG_BURST		, 1, 15 )
	ALPG_COMMAND("STI1",			ALPG_BURST		, 1, 16 )
	ALPG_COMMAND("STI2",			ALPG_BURST		, 1, 17 )
	ALPG_COMMAND("STI3",			ALPG_BURST		, 1, 18 )
	ALPG_COMMAND("STI4",			ALPG_BURST		, 1, 19 )
	ALPG_COMMAND("STI5",			ALPG_BURST		, 1, 20 )
	ALPG_COMMAND("STI6",			ALPG_BURST		, 1, 21 )
	ALPG_COMMAND("STI7",			ALPG_BURST		, 1, 22 )
	ALPG_COMMAND("STI8",			ALPG_BURST		, 1, 23 )

	ALPG_COMMAND("DATA_DEFINE",		ALPG_DATA	 		, 0, 0 )
	ALPG_COMMAND("PDS_DATA",		ALPG_DATA	 		, 0, 0 )
	ALPG_COMMAND("D/D",			ALPG_DATA	 		, 1, 0 )
	ALPG_COMMAND("CBM1/D",		ALPG_DATA	 		, 1, 1 )
	ALPG_COMMAND("FDA/D",			ALPG_DATA	 		, 1, 2 )
	ALPG_COMMAND("D/CBM2",		ALPG_DATA	 		, 1, 3 )
	ALPG_COMMAND("CBM1/CBM2",		ALPG_DATA	 		, 1, 4 )
	ALPG_COMMAND("FDA/CBM2",		ALPG_DATA	 		, 1, 5 )
	ALPG_COMMAND("D/FDB",			ALPG_DATA	 		, 1, 6 )
	ALPG_COMMAND("CBM1/FDB",		ALPG_DATA	 		, 1, 7 )
	ALPG_COMMAND("FDA/FDB",		ALPG_DATA	 		, 1, 8 )

//////////////////////////////////////////////////////////////////
//2023.05.02 - fatric(from Hy) JNI0 ~ JNI7D Modify
//////////////////////////////////////////////////////////////////
	ALPG_COMMAND( "JNI0"        , ALPG_OPCODE   , 0x20, 0x1100 )		//JNI 1
	ALPG_COMMAND( "JNI1"        , ALPG_OPCODE   , 0x20, 0x1101 )
	ALPG_COMMAND( "JNI2"        , ALPG_OPCODE   , 0x20, 0x1102 )
	ALPG_COMMAND( "JNI3"        , ALPG_OPCODE   , 0x20, 0x1103 )
	ALPG_COMMAND( "JNI4"        , ALPG_OPCODE   , 0x20, 0x1104 )
	ALPG_COMMAND( "JNI5"        , ALPG_OPCODE   , 0x20, 0x1105 )
	ALPG_COMMAND( "JNI6"        , ALPG_OPCODE   , 0x20, 0x1106 )
	ALPG_COMMAND( "JNI7"        , ALPG_OPCODE   , 0x20, 0x1107 )

	ALPG_COMMAND( "JNI0I"       , ALPG_OPCODE   , 0x40, 0x1100 )		//JNInI 1
	ALPG_COMMAND( "JNI1I"       , ALPG_OPCODE   , 0x40, 0x1101 )
	ALPG_COMMAND( "JNI2I"       , ALPG_OPCODE   , 0x40, 0x1102 )
	ALPG_COMMAND( "JNI3I"       , ALPG_OPCODE   , 0x40, 0x1103 )
	ALPG_COMMAND( "JNI4I"       , ALPG_OPCODE   , 0x40, 0x1104 )
	ALPG_COMMAND( "JNI5I"       , ALPG_OPCODE   , 0x40, 0x1105 )
	ALPG_COMMAND( "JNI6I"       , ALPG_OPCODE   , 0x40, 0x1106 )
	ALPG_COMMAND( "JNI7I"       , ALPG_OPCODE   , 0x40, 0x1107 )

	ALPG_COMMAND( "JNI0D"       , ALPG_OPCODE   , 0x80, 0x1100 )		//JNInD 1
	ALPG_COMMAND( "JNI1D"       , ALPG_OPCODE   , 0x80, 0x1101 )
	ALPG_COMMAND( "JNI2D"       , ALPG_OPCODE   , 0x80, 0x1102 )
	ALPG_COMMAND( "JNI3D"       , ALPG_OPCODE   , 0x80, 0x1103 )
	ALPG_COMMAND( "JNI4D"       , ALPG_OPCODE   , 0x80, 0x1104 )
	ALPG_COMMAND( "JNI5D"       , ALPG_OPCODE   , 0x80, 0x1105 )
	ALPG_COMMAND( "JNI6D"       , ALPG_OPCODE   , 0x80, 0x1106 )
	ALPG_COMMAND( "JNI7D"       , ALPG_OPCODE   , 0x80, 0x1107 )

//	ALPG_COMMAND( "IDXI1"       , ALPG_OPCODE   , 1, 0x1200 )		//IDXI 2
//	ALPG_COMMAND( "IDXI2"       , ALPG_OPCODE   , 1, 0x1201 )
//	ALPG_COMMAND( "IDXI3"       , ALPG_OPCODE   , 1, 0x1202 )
//	ALPG_COMMAND( "IDXI4"       , ALPG_OPCODE   , 1, 0x1203 )
//	ALPG_COMMAND( "IDXI5"       , ALPG_OPCODE   , 1, 0x1204 )
//	ALPG_COMMAND( "IDXI6"       , ALPG_OPCODE   , 1, 0x1205 )
//	ALPG_COMMAND( "IDXI7"       , ALPG_OPCODE   , 1, 0x1206 )
//	ALPG_COMMAND( "IDXI8"       , ALPG_OPCODE   , 1, 0x1207 )
	ALPG_COMMAND( "RPT"         , ALPG_OPCODE   , 1, 0x1209 )
	ALPG_COMMAND( "LDI0"        , ALPG_OPCODE   , 3, 0x2300 )		//LDI 3
	ALPG_COMMAND( "LDI1"        , ALPG_OPCODE   , 3, 0x2301 )
	ALPG_COMMAND( "LDI2"        , ALPG_OPCODE   , 3, 0x2302 )
	ALPG_COMMAND( "LDI3"        , ALPG_OPCODE   , 3, 0x2303 )
	ALPG_COMMAND( "LDI4"        , ALPG_OPCODE   , 3, 0x2304 )
	ALPG_COMMAND( "LDI5"        , ALPG_OPCODE   , 3, 0x2305 )
	ALPG_COMMAND( "LDI6"        , ALPG_OPCODE   , 3, 0x2306 )
	ALPG_COMMAND( "LDI7"        , ALPG_OPCODE   , 3, 0x2307 )
	ALPG_COMMAND( "STI0"        , ALPG_OPCODE   , 1, 0x4400 )		//STI 4
	ALPG_COMMAND( "STI1"        , ALPG_OPCODE   , 1, 0x4401 )
	ALPG_COMMAND( "STI2"        , ALPG_OPCODE   , 1, 0x4402 )
	ALPG_COMMAND( "STI3"        , ALPG_OPCODE   , 1, 0x4403 )
	ALPG_COMMAND( "STI4"        , ALPG_OPCODE   , 1, 0x4404 )
	ALPG_COMMAND( "STI5"        , ALPG_OPCODE   , 1, 0x4405 )
	ALPG_COMMAND( "STI6"        , ALPG_OPCODE   , 1, 0x4406 )
	ALPG_COMMAND( "STI7"        , ALPG_OPCODE   , 1, 0x4407 )
	ALPG_COMMAND( "STI8"        , ALPG_OPCODE   , 1, 0x4408 )
	ALPG_COMMAND( "JSR"         , ALPG_OPCODE   , 2, 0x0500 )		//JSR 5
	ALPG_COMMAND( "RTN"         , ALPG_OPCODE   , 0, 0x0600 )		//RTN 6
	ALPG_COMMAND( "JNC1"        , ALPG_OPCODE   , 2, 0x0700 )		//JNC 7
	ALPG_COMMAND( "JNC2"        , ALPG_OPCODE   , 2, 0x0701 )
	ALPG_COMMAND( "JNC3"        , ALPG_OPCODE   , 2, 0x0702 )
	ALPG_COMMAND( "JNC4"        , ALPG_OPCODE   , 2, 0x0703 )
	ALPG_COMMAND( "JNC5"        , ALPG_OPCODE   , 2, 0x0704 )
	ALPG_COMMAND( "JNC6"        , ALPG_OPCODE   , 2, 0x0705 )
	ALPG_COMMAND( "JNC7"        , ALPG_OPCODE   , 2, 0x0706 )
	ALPG_COMMAND( "JNC8"        , ALPG_OPCODE   , 2, 0x0707 )
	ALPG_COMMAND( "JNC9"        , ALPG_OPCODE   , 2, 0x0708 )
	ALPG_COMMAND( "JNC10"       , ALPG_OPCODE   , 2, 0x0709 )
	ALPG_COMMAND( "JNC11"       , ALPG_OPCODE   , 2, 0x070a )
	ALPG_COMMAND( "JNC12"       , ALPG_OPCODE   , 2, 0x070b )
	ALPG_COMMAND( "JNC13"       , ALPG_OPCODE   , 2, 0x070c )
	ALPG_COMMAND( "JNC14"       , ALPG_OPCODE   , 2, 0x070d )
	ALPG_COMMAND( "JNC15"       , ALPG_OPCODE   , 2, 0x070e )
	ALPG_COMMAND( "JNC16"       , ALPG_OPCODE   , 2, 0x070f )

	ALPG_COMMAND( "JNC17"       , ALPG_OPCODE   , 2, 0x0710 )
	ALPG_COMMAND( "JNC18"       , ALPG_OPCODE   , 2, 0x0711 )
	ALPG_COMMAND( "JNC19"       , ALPG_OPCODE   , 2, 0x0712 )
	ALPG_COMMAND( "JNC20"       , ALPG_OPCODE   , 2, 0x0713 )
	ALPG_COMMAND( "JNC21"       , ALPG_OPCODE   , 2, 0x0714 )
	ALPG_COMMAND( "JNC22"       , ALPG_OPCODE   , 2, 0x0715 )
	ALPG_COMMAND( "JNC23"       , ALPG_OPCODE   , 2, 0x0716 )
	ALPG_COMMAND( "JNC24"       , ALPG_OPCODE   , 2, 0x0717 )
	ALPG_COMMAND( "JNC25"       , ALPG_OPCODE   , 2, 0x0718 )
	ALPG_COMMAND( "JNC26"       , ALPG_OPCODE   , 2, 0x0719 )
	ALPG_COMMAND( "JNC27"       , ALPG_OPCODE   , 2, 0x071a )
	ALPG_COMMAND( "JNC28"       , ALPG_OPCODE   , 2, 0x071b )
	ALPG_COMMAND( "JNC29"       , ALPG_OPCODE   , 2, 0x071c )
	ALPG_COMMAND( "JNC30"       , ALPG_OPCODE   , 2, 0x071d )
	ALPG_COMMAND( "JNC31"       , ALPG_OPCODE   , 2, 0x071e )
	ALPG_COMMAND( "JNC32"       , ALPG_OPCODE   , 2, 0x071f )

	ALPG_COMMAND( "JZD"         , ALPG_OPCODE   , 2, 0x0800 )		//JZD 8
	ALPG_COMMAND( "JET"         , ALPG_OPCODE   , 2, 0x0900 )		//JET 9
	ALPG_COMMAND( "NOP"         , ALPG_OPCODE   , 0, 0x0a00 )		//NOP a
	ALPG_COMMAND( "DSET"        , ALPG_OPCODE   , 0, 0x0a00 )
	ALPG_COMMAND( "JMP"         , ALPG_OPCODE   , 2, 0x0b00 )		//JMP b
	ALPG_COMMAND( "STISP"       , ALPG_OPCODE   , 2, 0x0c00 )		//STISP c
//	ALPG_COMMAND( "FLGLI1"      , ALPG_OPCODE   , 2, 0x9d00 )		//FLGLI1 9d	//1d -> 9d - 2016-12-16
//	ALPG_COMMAND( "FLGLI2"      , ALPG_OPCODE   , 2, 0x9d01 )		//FLGLI2 9d
//	ALPG_COMMAND( "FLGLI3"      , ALPG_OPCODE   , 2, 0x9d02 )		//FLGLI3 9d
//	ALPG_COMMAND( "FLGLI4"      , ALPG_OPCODE   , 2, 0x9d03 )		//FLGLI4 9d
//	ALPG_COMMAND( "FLGLI5"      , ALPG_OPCODE   , 2, 0x9d04 )		//FLGLI5 9d
//	ALPG_COMMAND( "FLGLI6"      , ALPG_OPCODE   , 2, 0x9d05 )		//FLGLI6 9d
//	ALPG_COMMAND( "FLGLI7"      , ALPG_OPCODE   , 2, 0x9d06 )		//FLGLI7 9d
//	ALPG_COMMAND( "FLGLI8"      , ALPG_OPCODE   , 2, 0x9d07 )		//FLGLI8 9d
	ALPG_COMMAND( "FLGLI1"      , ALPG_OPCODE   , 2, 0x9d08 )		//FLGLI1 9d
//	ALPG_COMMAND( "WAIT"        , ALPG_OPCODE   , 0, 0x0e00 )		//WAIT e
	ALPG_COMMAND( "OUT"         , ALPG_OPCODE   , 1, 0x0e00 )		//OUT  e
//	ALPG_COMMAND( "STPS"        , ALPG_OPCODE   , 0, 0x0f00 )		//STOP f
//	ALPG_COMMAND( "STFL"        , ALPG_OPCODE   , 0, 0x0f00 )
//	ALPG_COMMAND( "STOP"        , ALPG_OPCODE   , 0, 0x0f00 )

	ALPG_COMMAND( "STBAR"       , ALPG_OPCODE   , 2, 0x0f00 )		//STBAR f

	ALPG_COMMAND( "STPS"        , ALPG_OPCODE   , 0x10, 0x0f00 )	//STOP 1f (cmd.opt:0x10, cmd.bit:0xf)
	ALPG_COMMAND( "STFL"        , ALPG_OPCODE   , 0x10, 0x0f00 )
	ALPG_COMMAND( "STOP"        , ALPG_OPCODE   , 0x10, 0x0f00 )

	ALPG_COMMAND( "TM1"         , ALPG_CONTROL  , 0, 0x1   )
	ALPG_COMMAND( "TM2"         , ALPG_CONTROL  , 0, 0x2   )
	ALPG_COMMAND( "TM3"         , ALPG_CONTROL  , 0, 0x4   )
	ALPG_COMMAND( "T"           , ALPG_CONTROL  , 0, 0x7   )
	ALPG_COMMAND( "I"           , ALPG_CONTROL  , 0, 0x8   )

//	ALPG_COMMAND( "DBMINC"      , ALPG_CONTROL  , 1, 0x1   )

//	BASE ADDRESS
	ALPG_COMMAND( "XB<XB"        , ALPG_ADDR_BASE, 0, 0x0000  )		//XB
	ALPG_COMMAND( "XB<XB+1"      , ALPG_ADDR_BASE, 0, 0x0001  )
	ALPG_COMMAND( "XB<XB-1"      , ALPG_ADDR_BASE, 0, 0x0002  )
	ALPG_COMMAND( "XB<XH"        , ALPG_ADDR_BASE, 0, 0x0003  )
	ALPG_COMMAND( "XB<0"         , ALPG_ADDR_BASE, 0, 0x0004  )
	ALPG_COMMAND( "XB<D1"        , ALPG_ADDR_BASE, 0, 0x0005  )
	ALPG_COMMAND( "XB<D1A"       , ALPG_ADDR_BASE, 0, 0x0005  )
	ALPG_COMMAND( "XB<D1B"       , ALPG_ADDR_BASE, 0, 0x0015  )
	ALPG_COMMAND( "XB<D1C"       , ALPG_ADDR_BASE, 0, 0x0025  )
	ALPG_COMMAND( "XB<D1D"       , ALPG_ADDR_BASE, 0, 0x0035  )
	ALPG_COMMAND( "XB<D1E"       , ALPG_ADDR_BASE, 0, 0x0045  )
	ALPG_COMMAND( "XB<D1F"       , ALPG_ADDR_BASE, 0, 0x0055  )
	ALPG_COMMAND( "XB<D1G"       , ALPG_ADDR_BASE, 0, 0x0065  )
	ALPG_COMMAND( "XB<D1H"       , ALPG_ADDR_BASE, 0, 0x0075  )
	ALPG_COMMAND( "XB<D2"        , ALPG_ADDR_BASE, 0, 0x0085  )
	ALPG_COMMAND( "XB<D2A"       , ALPG_ADDR_BASE, 0, 0x0085  )
	ALPG_COMMAND( "XB<D2B"       , ALPG_ADDR_BASE, 0, 0x0095  )
	ALPG_COMMAND( "XB<D2C"       , ALPG_ADDR_BASE, 0, 0x00a5  )
	ALPG_COMMAND( "XB<D2D"       , ALPG_ADDR_BASE, 0, 0x00b5  )

	ALPG_COMMAND( "XB<L1A"       , ALPG_ADDR_BASE, 0, 0x00C5  )
	ALPG_COMMAND( "XB<L1B"       , ALPG_ADDR_BASE, 0, 0x00D5  )
	ALPG_COMMAND( "XB<L1C"       , ALPG_ADDR_BASE, 0, 0x00E5  )
	ALPG_COMMAND( "XB<L1D"       , ALPG_ADDR_BASE, 0, 0x00F5  )
	ALPG_COMMAND( "XB<L1E"       , ALPG_ADDR_BASE, 0, 0x0105  )
	ALPG_COMMAND( "XB<L1F"       , ALPG_ADDR_BASE, 0, 0x0115  )
	ALPG_COMMAND( "XB<L1G"       , ALPG_ADDR_BASE, 0, 0x0125  )
	ALPG_COMMAND( "XB<L1H"       , ALPG_ADDR_BASE, 0, 0x0135  )
	ALPG_COMMAND( "XB<L2A"       , ALPG_ADDR_BASE, 0, 0x0145  )
	ALPG_COMMAND( "XB<L2B"       , ALPG_ADDR_BASE, 0, 0x0155  )
	ALPG_COMMAND( "XB<L2C"       , ALPG_ADDR_BASE, 0, 0x0165  )
	ALPG_COMMAND( "XB<L2D"       , ALPG_ADDR_BASE, 0, 0x0175  )
	ALPG_COMMAND( "XB<L2E"       , ALPG_ADDR_BASE, 0, 0x0185  )
	ALPG_COMMAND( "XB<L2F"       , ALPG_ADDR_BASE, 0, 0x0195  )
	ALPG_COMMAND( "XB<L2G"       , ALPG_ADDR_BASE, 0, 0x01A5  )
	ALPG_COMMAND( "XB<L2H"       , ALPG_ADDR_BASE, 0, 0x01B5  )
	ALPG_COMMAND( "XB<L3A"       , ALPG_ADDR_BASE, 0, 0x01C5  )
	ALPG_COMMAND( "XB<L3B"       , ALPG_ADDR_BASE, 0, 0x01D5  )
	ALPG_COMMAND( "XB<L3C"       , ALPG_ADDR_BASE, 0, 0x01E5  )
	ALPG_COMMAND( "XB<L3D"       , ALPG_ADDR_BASE, 0, 0x01F5  )
	ALPG_COMMAND( "XB<L3E"       , ALPG_ADDR_BASE, 0, 0x0205  )
	ALPG_COMMAND( "XB<L3F"       , ALPG_ADDR_BASE, 0, 0x0215  )
	ALPG_COMMAND( "XB<L3G"       , ALPG_ADDR_BASE, 0, 0x0225  )
	ALPG_COMMAND( "XB<L3H"       , ALPG_ADDR_BASE, 0, 0x0235  )
	ALPG_COMMAND( "XB<L4A"       , ALPG_ADDR_BASE, 0, 0x0245  )
	ALPG_COMMAND( "XB<L4B"       , ALPG_ADDR_BASE, 0, 0x0255  )
	ALPG_COMMAND( "XB<L4C"       , ALPG_ADDR_BASE, 0, 0x0265  )
	ALPG_COMMAND( "XB<L4D"       , ALPG_ADDR_BASE, 0, 0x0275  )
	ALPG_COMMAND( "XB<L4E"       , ALPG_ADDR_BASE, 0, 0x0285  )
	ALPG_COMMAND( "XB<L4F"       , ALPG_ADDR_BASE, 0, 0x0295  )
	ALPG_COMMAND( "XB<L4G"       , ALPG_ADDR_BASE, 0, 0x02A5  )
	ALPG_COMMAND( "XB<L4H"       , ALPG_ADDR_BASE, 0, 0x02B5  )
	ALPG_COMMAND( "XB<"          , ALPG_ADDR_BASE, 4, 0x02C5  )	//digit1

	ALPG_COMMAND( "XB<XB+D1"     , ALPG_ADDR_BASE, 0, 0x0006  )
	ALPG_COMMAND( "XB<XB+D1A"    , ALPG_ADDR_BASE, 0, 0x0006  )
	ALPG_COMMAND( "XB<XB+D1B"    , ALPG_ADDR_BASE, 0, 0x0016  )
	ALPG_COMMAND( "XB<XB+D1C"    , ALPG_ADDR_BASE, 0, 0x0026  )
	ALPG_COMMAND( "XB<XB+D1D"    , ALPG_ADDR_BASE, 0, 0x0036  )
	ALPG_COMMAND( "XB<XB+D1E"    , ALPG_ADDR_BASE, 0, 0x0046  )
	ALPG_COMMAND( "XB<XB+D1F"    , ALPG_ADDR_BASE, 0, 0x0056  )
	ALPG_COMMAND( "XB<XB+D1G"    , ALPG_ADDR_BASE, 0, 0x0066  )
	ALPG_COMMAND( "XB<XB+D1H"    , ALPG_ADDR_BASE, 0, 0x0076  )
	ALPG_COMMAND( "XB<XB+D2"     , ALPG_ADDR_BASE, 0, 0x0086  )
	ALPG_COMMAND( "XB<XB+D2A"    , ALPG_ADDR_BASE, 0, 0x0086  )
	ALPG_COMMAND( "XB<XB+D2B"    , ALPG_ADDR_BASE, 0, 0x0096  )
	ALPG_COMMAND( "XB<XB+D2C"    , ALPG_ADDR_BASE, 0, 0x00a6  )
	ALPG_COMMAND( "XB<XB+D2D"    , ALPG_ADDR_BASE, 0, 0x00b6  )

	ALPG_COMMAND( "XB<XB+L1A"    , ALPG_ADDR_BASE, 0, 0x00C6  )
	ALPG_COMMAND( "XB<XB+L1B"    , ALPG_ADDR_BASE, 0, 0x00D6  )
	ALPG_COMMAND( "XB<XB+L1C"    , ALPG_ADDR_BASE, 0, 0x00E6  )
	ALPG_COMMAND( "XB<XB+L1D"    , ALPG_ADDR_BASE, 0, 0x00F6  )
	ALPG_COMMAND( "XB<XB+L1E"    , ALPG_ADDR_BASE, 0, 0x0106  )
	ALPG_COMMAND( "XB<XB+L1F"    , ALPG_ADDR_BASE, 0, 0x0116  )
	ALPG_COMMAND( "XB<XB+L1G"    , ALPG_ADDR_BASE, 0, 0x0126  )
	ALPG_COMMAND( "XB<XB+L1H"    , ALPG_ADDR_BASE, 0, 0x0136  )
	ALPG_COMMAND( "XB<XB+L2A"    , ALPG_ADDR_BASE, 0, 0x0146  )
	ALPG_COMMAND( "XB<XB+L2B"    , ALPG_ADDR_BASE, 0, 0x0156  )
	ALPG_COMMAND( "XB<XB+L2C"    , ALPG_ADDR_BASE, 0, 0x0166  )
	ALPG_COMMAND( "XB<XB+L2D"    , ALPG_ADDR_BASE, 0, 0x0176  )
	ALPG_COMMAND( "XB<XB+L2E"    , ALPG_ADDR_BASE, 0, 0x0186  )
	ALPG_COMMAND( "XB<XB+L2F"    , ALPG_ADDR_BASE, 0, 0x0196  )
	ALPG_COMMAND( "XB<XB+L2G"    , ALPG_ADDR_BASE, 0, 0x01A6  )
	ALPG_COMMAND( "XB<XB+L2H"    , ALPG_ADDR_BASE, 0, 0x01B6  )
	ALPG_COMMAND( "XB<XB+L3A"    , ALPG_ADDR_BASE, 0, 0x01C6  )
	ALPG_COMMAND( "XB<XB+L3B"    , ALPG_ADDR_BASE, 0, 0x01D6  )
	ALPG_COMMAND( "XB<XB+L3C"    , ALPG_ADDR_BASE, 0, 0x01E6  )
	ALPG_COMMAND( "XB<XB+L3D"    , ALPG_ADDR_BASE, 0, 0x01F6  )
	ALPG_COMMAND( "XB<XB+L3E"    , ALPG_ADDR_BASE, 0, 0x0206  )
	ALPG_COMMAND( "XB<XB+L3F"    , ALPG_ADDR_BASE, 0, 0x0216  )
	ALPG_COMMAND( "XB<XB+L3G"    , ALPG_ADDR_BASE, 0, 0x0226  )
	ALPG_COMMAND( "XB<XB+L3H"    , ALPG_ADDR_BASE, 0, 0x0236  )
	ALPG_COMMAND( "XB<XB+L4A"    , ALPG_ADDR_BASE, 0, 0x0246  )
	ALPG_COMMAND( "XB<XB+L4B"    , ALPG_ADDR_BASE, 0, 0x0256  )
	ALPG_COMMAND( "XB<XB+L4C"    , ALPG_ADDR_BASE, 0, 0x0266  )
	ALPG_COMMAND( "XB<XB+L4D"    , ALPG_ADDR_BASE, 0, 0x0276  )
	ALPG_COMMAND( "XB<XB+L4E"    , ALPG_ADDR_BASE, 0, 0x0286  )
	ALPG_COMMAND( "XB<XB+L4F"    , ALPG_ADDR_BASE, 0, 0x0296  )
	ALPG_COMMAND( "XB<XB+L4G"    , ALPG_ADDR_BASE, 0, 0x02A6  )
	ALPG_COMMAND( "XB<XB+L4H"    , ALPG_ADDR_BASE, 0, 0x02B6  )
	ALPG_COMMAND( "XB<XB+"       , ALPG_ADDR_BASE, 4, 0x02C6  )

	ALPG_COMMAND( "XB<XB-D1"     , ALPG_ADDR_BASE, 0, 0x0007  )
	ALPG_COMMAND( "XB<XB-D1A"    , ALPG_ADDR_BASE, 0, 0x0007  )
	ALPG_COMMAND( "XB<XB-D1B"    , ALPG_ADDR_BASE, 0, 0x0017  )
	ALPG_COMMAND( "XB<XB-D1C"    , ALPG_ADDR_BASE, 0, 0x0027  )
	ALPG_COMMAND( "XB<XB-D1D"    , ALPG_ADDR_BASE, 0, 0x0037  )
	ALPG_COMMAND( "XB<XB-D1E"    , ALPG_ADDR_BASE, 0, 0x0047  )
	ALPG_COMMAND( "XB<XB-D1F"    , ALPG_ADDR_BASE, 0, 0x0057  )
	ALPG_COMMAND( "XB<XB-D1G"    , ALPG_ADDR_BASE, 0, 0x0067  )
	ALPG_COMMAND( "XB<XB-D1H"    , ALPG_ADDR_BASE, 0, 0x0077  )
	ALPG_COMMAND( "XB<XB-D2"     , ALPG_ADDR_BASE, 0, 0x0087  )
	ALPG_COMMAND( "XB<XB-D2A"    , ALPG_ADDR_BASE, 0, 0x0087  )
	ALPG_COMMAND( "XB<XB-D2B"    , ALPG_ADDR_BASE, 0, 0x0097  )
	ALPG_COMMAND( "XB<XB-D2C"    , ALPG_ADDR_BASE, 0, 0x00a7  )
	ALPG_COMMAND( "XB<XB-D2D"    , ALPG_ADDR_BASE, 0, 0x00b7  )

	ALPG_COMMAND( "XB<XB-L1A"    , ALPG_ADDR_BASE, 0, 0x00C7  )
	ALPG_COMMAND( "XB<XB-L1B"    , ALPG_ADDR_BASE, 0, 0x00D7  )
	ALPG_COMMAND( "XB<XB-L1C"    , ALPG_ADDR_BASE, 0, 0x00E7  )
	ALPG_COMMAND( "XB<XB-L1D"    , ALPG_ADDR_BASE, 0, 0x00F7  )
	ALPG_COMMAND( "XB<XB-L1E"    , ALPG_ADDR_BASE, 0, 0x0107  )
	ALPG_COMMAND( "XB<XB-L1F"    , ALPG_ADDR_BASE, 0, 0x0117  )
	ALPG_COMMAND( "XB<XB-L1G"    , ALPG_ADDR_BASE, 0, 0x0127  )
	ALPG_COMMAND( "XB<XB-L1H"    , ALPG_ADDR_BASE, 0, 0x0137  )
	ALPG_COMMAND( "XB<XB-L2A"    , ALPG_ADDR_BASE, 0, 0x0147  )
	ALPG_COMMAND( "XB<XB-L2B"    , ALPG_ADDR_BASE, 0, 0x0157  )
	ALPG_COMMAND( "XB<XB-L2C"    , ALPG_ADDR_BASE, 0, 0x0167  )
	ALPG_COMMAND( "XB<XB-L2D"    , ALPG_ADDR_BASE, 0, 0x0177  )
	ALPG_COMMAND( "XB<XB-L2E"    , ALPG_ADDR_BASE, 0, 0x0187  )
	ALPG_COMMAND( "XB<XB-L2F"    , ALPG_ADDR_BASE, 0, 0x0197  )
	ALPG_COMMAND( "XB<XB-L2G"    , ALPG_ADDR_BASE, 0, 0x01A7  )
	ALPG_COMMAND( "XB<XB-L2H"    , ALPG_ADDR_BASE, 0, 0x01B7  )
	ALPG_COMMAND( "XB<XB-L3A"    , ALPG_ADDR_BASE, 0, 0x01C7  )
	ALPG_COMMAND( "XB<XB-L3B"    , ALPG_ADDR_BASE, 0, 0x01D7  )
	ALPG_COMMAND( "XB<XB-L3C"    , ALPG_ADDR_BASE, 0, 0x01E7  )
	ALPG_COMMAND( "XB<XB-L3D"    , ALPG_ADDR_BASE, 0, 0x01F7  )
	ALPG_COMMAND( "XB<XB-L3E"    , ALPG_ADDR_BASE, 0, 0x0207  )
	ALPG_COMMAND( "XB<XB-L3F"    , ALPG_ADDR_BASE, 0, 0x0217  )
	ALPG_COMMAND( "XB<XB-L3G"    , ALPG_ADDR_BASE, 0, 0x0227  )
	ALPG_COMMAND( "XB<XB-L3H"    , ALPG_ADDR_BASE, 0, 0x0237  )
	ALPG_COMMAND( "XB<XB-L4A"    , ALPG_ADDR_BASE, 0, 0x0247  )
	ALPG_COMMAND( "XB<XB-L4B"    , ALPG_ADDR_BASE, 0, 0x0257  )
	ALPG_COMMAND( "XB<XB-L4C"    , ALPG_ADDR_BASE, 0, 0x0267  )
	ALPG_COMMAND( "XB<XB-L4D"    , ALPG_ADDR_BASE, 0, 0x0277  )
	ALPG_COMMAND( "XB<XB-L4E"    , ALPG_ADDR_BASE, 0, 0x0287  )
	ALPG_COMMAND( "XB<XB-L4F"    , ALPG_ADDR_BASE, 0, 0x0297  )
	ALPG_COMMAND( "XB<XB-L4G"    , ALPG_ADDR_BASE, 0, 0x02A7  )
	ALPG_COMMAND( "XB<XB-L4H"    , ALPG_ADDR_BASE, 0, 0x02B7  )
	ALPG_COMMAND( "XB<XB-"       , ALPG_ADDR_BASE, 4, 0x02C7  )

	ALPG_COMMAND( "YB<YB"        , ALPG_ADDR_BASE, 1, 0x0000  )		//YB
	ALPG_COMMAND( "YB<YB+1"      , ALPG_ADDR_BASE, 1, 0x0001  )
	ALPG_COMMAND( "YB<YB-1"      , ALPG_ADDR_BASE, 1, 0x0002  )
	ALPG_COMMAND( "YB<YH"        , ALPG_ADDR_BASE, 1, 0x0003  )
	ALPG_COMMAND( "YB<YB+1^BX"   , ALPG_ADDR_BASE, 1, 0x0004  )
	ALPG_COMMAND( "YB<YB-1^BX"   , ALPG_ADDR_BASE, 1, 0x0005  )
	ALPG_COMMAND( "YB<YB+1+BX"   , ALPG_ADDR_BASE, 1, 0x0006  )
	ALPG_COMMAND( "YB<YB-1-BX"   , ALPG_ADDR_BASE, 1, 0x0007  )
	ALPG_COMMAND( "YB<0"         , ALPG_ADDR_BASE, 1, 0x0008  )
	ALPG_COMMAND( "YB<D1"        , ALPG_ADDR_BASE, 1, 0x0009  )
	ALPG_COMMAND( "YB<D1A"       , ALPG_ADDR_BASE, 1, 0x0009  )
	ALPG_COMMAND( "YB<D1B"       , ALPG_ADDR_BASE, 1, 0x0019  )
	ALPG_COMMAND( "YB<D1C"       , ALPG_ADDR_BASE, 1, 0x0029  )
	ALPG_COMMAND( "YB<D1D"       , ALPG_ADDR_BASE, 1, 0x0039  )
	ALPG_COMMAND( "YB<D1E"       , ALPG_ADDR_BASE, 1, 0x0049  )
	ALPG_COMMAND( "YB<D1F"       , ALPG_ADDR_BASE, 1, 0x0059  )
	ALPG_COMMAND( "YB<D1G"       , ALPG_ADDR_BASE, 1, 0x0069  )
	ALPG_COMMAND( "YB<D1H"       , ALPG_ADDR_BASE, 1, 0x0079  )
	ALPG_COMMAND( "YB<D2"        , ALPG_ADDR_BASE, 1, 0x0089  )
	ALPG_COMMAND( "YB<D2A"       , ALPG_ADDR_BASE, 1, 0x0089  )
	ALPG_COMMAND( "YB<D2B"       , ALPG_ADDR_BASE, 1, 0x0099  )
	ALPG_COMMAND( "YB<D2C"       , ALPG_ADDR_BASE, 1, 0x00a9  )
	ALPG_COMMAND( "YB<D2D"       , ALPG_ADDR_BASE, 1, 0x00b9  )

	ALPG_COMMAND( "YB<L1A"       , ALPG_ADDR_BASE, 1, 0x00C9  )
	ALPG_COMMAND( "YB<L1B"       , ALPG_ADDR_BASE, 1, 0x00D9  )
	ALPG_COMMAND( "YB<L1C"       , ALPG_ADDR_BASE, 1, 0x00E9  )
	ALPG_COMMAND( "YB<L1D"       , ALPG_ADDR_BASE, 1, 0x00F9  )
	ALPG_COMMAND( "YB<L1E"       , ALPG_ADDR_BASE, 1, 0x0109  )
	ALPG_COMMAND( "YB<L1F"       , ALPG_ADDR_BASE, 1, 0x0119  )
	ALPG_COMMAND( "YB<L1G"       , ALPG_ADDR_BASE, 1, 0x0129  )
	ALPG_COMMAND( "YB<L1H"       , ALPG_ADDR_BASE, 1, 0x0139  )
	ALPG_COMMAND( "YB<L2A"       , ALPG_ADDR_BASE, 1, 0x0149  )
	ALPG_COMMAND( "YB<L2B"       , ALPG_ADDR_BASE, 1, 0x0159  )
	ALPG_COMMAND( "YB<L2C"       , ALPG_ADDR_BASE, 1, 0x0169  )
	ALPG_COMMAND( "YB<L2D"       , ALPG_ADDR_BASE, 1, 0x0179  )
	ALPG_COMMAND( "YB<L2E"       , ALPG_ADDR_BASE, 1, 0x0189  )
	ALPG_COMMAND( "YB<L2F"       , ALPG_ADDR_BASE, 1, 0x0199  )
	ALPG_COMMAND( "YB<L2G"       , ALPG_ADDR_BASE, 1, 0x01A9  )
	ALPG_COMMAND( "YB<L2H"       , ALPG_ADDR_BASE, 1, 0x01B9  )
	ALPG_COMMAND( "YB<L3A"       , ALPG_ADDR_BASE, 1, 0x01C9  )
	ALPG_COMMAND( "YB<L3B"       , ALPG_ADDR_BASE, 1, 0x01D9  )
	ALPG_COMMAND( "YB<L3C"       , ALPG_ADDR_BASE, 1, 0x01E9  )
	ALPG_COMMAND( "YB<L3D"       , ALPG_ADDR_BASE, 1, 0x01F9  )
	ALPG_COMMAND( "YB<L3E"       , ALPG_ADDR_BASE, 1, 0x0209  )
	ALPG_COMMAND( "YB<L3F"       , ALPG_ADDR_BASE, 1, 0x0219  )
	ALPG_COMMAND( "YB<L3G"       , ALPG_ADDR_BASE, 1, 0x0229  )
	ALPG_COMMAND( "YB<L3H"       , ALPG_ADDR_BASE, 1, 0x0239  )
	ALPG_COMMAND( "YB<L4A"       , ALPG_ADDR_BASE, 1, 0x0249  )
	ALPG_COMMAND( "YB<L4B"       , ALPG_ADDR_BASE, 1, 0x0259  )
	ALPG_COMMAND( "YB<L4C"       , ALPG_ADDR_BASE, 1, 0x0269  )
	ALPG_COMMAND( "YB<L4D"       , ALPG_ADDR_BASE, 1, 0x0279  )
	ALPG_COMMAND( "YB<L4E"       , ALPG_ADDR_BASE, 1, 0x0289  )
	ALPG_COMMAND( "YB<L4F"       , ALPG_ADDR_BASE, 1, 0x0299  )
	ALPG_COMMAND( "YB<L4G"       , ALPG_ADDR_BASE, 1, 0x02A9  )
	ALPG_COMMAND( "YB<L4H"       , ALPG_ADDR_BASE, 1, 0x02B9  )
	ALPG_COMMAND( "YB<"          , ALPG_ADDR_BASE, 5, 0x02D9  )	//digit2

	ALPG_COMMAND( "YB<YB+D1"     , ALPG_ADDR_BASE, 1, 0x000a  )
	ALPG_COMMAND( "YB<YB+D1A"    , ALPG_ADDR_BASE, 1, 0x000a  )
	ALPG_COMMAND( "YB<YB+D1B"    , ALPG_ADDR_BASE, 1, 0x001a  )
	ALPG_COMMAND( "YB<YB+D1C"    , ALPG_ADDR_BASE, 1, 0x002a  )
	ALPG_COMMAND( "YB<YB+D1D"    , ALPG_ADDR_BASE, 1, 0x003a  )
	ALPG_COMMAND( "YB<YB+D1E"    , ALPG_ADDR_BASE, 1, 0x004a  )
	ALPG_COMMAND( "YB<YB+D1F"    , ALPG_ADDR_BASE, 1, 0x005a  )
	ALPG_COMMAND( "YB<YB+D1G"    , ALPG_ADDR_BASE, 1, 0x006a  )
	ALPG_COMMAND( "YB<YB+D1H"    , ALPG_ADDR_BASE, 1, 0x007a  )
	ALPG_COMMAND( "YB<YB+D2"     , ALPG_ADDR_BASE, 1, 0x008a  )
	ALPG_COMMAND( "YB<YB+D2A"    , ALPG_ADDR_BASE, 1, 0x008a  )
	ALPG_COMMAND( "YB<YB+D2B"    , ALPG_ADDR_BASE, 1, 0x009a  )
	ALPG_COMMAND( "YB<YB+D2C"    , ALPG_ADDR_BASE, 1, 0x00aa  )
	ALPG_COMMAND( "YB<YB+D2D"    , ALPG_ADDR_BASE, 1, 0x00ba  )

	ALPG_COMMAND( "YB<YB+L1A"    , ALPG_ADDR_BASE, 1, 0x00CA  )
	ALPG_COMMAND( "YB<YB+L1B"    , ALPG_ADDR_BASE, 1, 0x00DA  )
	ALPG_COMMAND( "YB<YB+L1C"    , ALPG_ADDR_BASE, 1, 0x00EA  )
	ALPG_COMMAND( "YB<YB+L1D"    , ALPG_ADDR_BASE, 1, 0x00FA  )
	ALPG_COMMAND( "YB<YB+L1E"    , ALPG_ADDR_BASE, 1, 0x010A  )
	ALPG_COMMAND( "YB<YB+L1F"    , ALPG_ADDR_BASE, 1, 0x011A  )
	ALPG_COMMAND( "YB<YB+L1G"    , ALPG_ADDR_BASE, 1, 0x012A  )
	ALPG_COMMAND( "YB<YB+L1H"    , ALPG_ADDR_BASE, 1, 0x013A  )
	ALPG_COMMAND( "YB<YB+L2A"    , ALPG_ADDR_BASE, 1, 0x014A  )
	ALPG_COMMAND( "YB<YB+L2B"    , ALPG_ADDR_BASE, 1, 0x015A  )
	ALPG_COMMAND( "YB<YB+L2C"    , ALPG_ADDR_BASE, 1, 0x016A  )
	ALPG_COMMAND( "YB<YB+L2D"    , ALPG_ADDR_BASE, 1, 0x017A  )
	ALPG_COMMAND( "YB<YB+L2E"    , ALPG_ADDR_BASE, 1, 0x018A  )
	ALPG_COMMAND( "YB<YB+L2F"    , ALPG_ADDR_BASE, 1, 0x019A  )
	ALPG_COMMAND( "YB<YB+L2G"    , ALPG_ADDR_BASE, 1, 0x01AA  )
	ALPG_COMMAND( "YB<YB+L2H"    , ALPG_ADDR_BASE, 1, 0x01BA  )
	ALPG_COMMAND( "YB<YB+L3A"    , ALPG_ADDR_BASE, 1, 0x01CA  )
	ALPG_COMMAND( "YB<YB+L3B"    , ALPG_ADDR_BASE, 1, 0x01DA  )
	ALPG_COMMAND( "YB<YB+L3C"    , ALPG_ADDR_BASE, 1, 0x01EA  )
	ALPG_COMMAND( "YB<YB+L3D"    , ALPG_ADDR_BASE, 1, 0x01FA  )
	ALPG_COMMAND( "YB<YB+L3E"    , ALPG_ADDR_BASE, 1, 0x020A  )
	ALPG_COMMAND( "YB<YB+L3F"    , ALPG_ADDR_BASE, 1, 0x021A  )
	ALPG_COMMAND( "YB<YB+L3G"    , ALPG_ADDR_BASE, 1, 0x022A  )
	ALPG_COMMAND( "YB<YB+L3H"    , ALPG_ADDR_BASE, 1, 0x023A  )
	ALPG_COMMAND( "YB<YB+L4A"    , ALPG_ADDR_BASE, 1, 0x024A  )
	ALPG_COMMAND( "YB<YB+L4B"    , ALPG_ADDR_BASE, 1, 0x025A  )
	ALPG_COMMAND( "YB<YB+L4C"    , ALPG_ADDR_BASE, 1, 0x026A  )
	ALPG_COMMAND( "YB<YB+L4D"    , ALPG_ADDR_BASE, 1, 0x027A  )
	ALPG_COMMAND( "YB<YB+L4E"    , ALPG_ADDR_BASE, 1, 0x028A  )
	ALPG_COMMAND( "YB<YB+L4F"    , ALPG_ADDR_BASE, 1, 0x029A  )
	ALPG_COMMAND( "YB<YB+L4G"    , ALPG_ADDR_BASE, 1, 0x02AA  )
	ALPG_COMMAND( "YB<YB+L4H"    , ALPG_ADDR_BASE, 1, 0x02BA  )
	ALPG_COMMAND( "YB<YB+"       , ALPG_ADDR_BASE, 5, 0x02DA  )


	ALPG_COMMAND( "YB<YB-D1"     , ALPG_ADDR_BASE, 1, 0x000b  )
	ALPG_COMMAND( "YB<YB-D1A"    , ALPG_ADDR_BASE, 1, 0x000b  )
	ALPG_COMMAND( "YB<YB-D1B"    , ALPG_ADDR_BASE, 1, 0x001b  )
	ALPG_COMMAND( "YB<YB-D1C"    , ALPG_ADDR_BASE, 1, 0x002b  )
	ALPG_COMMAND( "YB<YB-D1D"    , ALPG_ADDR_BASE, 1, 0x003b  )
	ALPG_COMMAND( "YB<YB-D1E"    , ALPG_ADDR_BASE, 1, 0x004b  )
	ALPG_COMMAND( "YB<YB-D1F"    , ALPG_ADDR_BASE, 1, 0x005b  )
	ALPG_COMMAND( "YB<YB-D1G"    , ALPG_ADDR_BASE, 1, 0x006b  )
	ALPG_COMMAND( "YB<YB-D1H"    , ALPG_ADDR_BASE, 1, 0x007b  )
	ALPG_COMMAND( "YB<YB-D2"     , ALPG_ADDR_BASE, 1, 0x008b  )
	ALPG_COMMAND( "YB<YB-D2A"    , ALPG_ADDR_BASE, 1, 0x008b  )
	ALPG_COMMAND( "YB<YB-D2B"    , ALPG_ADDR_BASE, 1, 0x009b  )
	ALPG_COMMAND( "YB<YB-D2C"    , ALPG_ADDR_BASE, 1, 0x00ab  )
	ALPG_COMMAND( "YB<YB-D2D"    , ALPG_ADDR_BASE, 1, 0x00bb  )

	ALPG_COMMAND( "YB<YB-L1A"    , ALPG_ADDR_BASE, 1, 0x00CB  )
	ALPG_COMMAND( "YB<YB-L1B"    , ALPG_ADDR_BASE, 1, 0x00DB  )
	ALPG_COMMAND( "YB<YB-L1C"    , ALPG_ADDR_BASE, 1, 0x00EB  )
	ALPG_COMMAND( "YB<YB-L1D"    , ALPG_ADDR_BASE, 1, 0x00FB  )
	ALPG_COMMAND( "YB<YB-L1E"    , ALPG_ADDR_BASE, 1, 0x010B  )
	ALPG_COMMAND( "YB<YB-L1F"    , ALPG_ADDR_BASE, 1, 0x011B  )
	ALPG_COMMAND( "YB<YB-L1G"    , ALPG_ADDR_BASE, 1, 0x012B  )
	ALPG_COMMAND( "YB<YB-L1H"    , ALPG_ADDR_BASE, 1, 0x013B  )
	ALPG_COMMAND( "YB<YB-L2A"    , ALPG_ADDR_BASE, 1, 0x014B  )
	ALPG_COMMAND( "YB<YB-L2B"    , ALPG_ADDR_BASE, 1, 0x015B  )
	ALPG_COMMAND( "YB<YB-L2C"    , ALPG_ADDR_BASE, 1, 0x016B  )
	ALPG_COMMAND( "YB<YB-L2D"    , ALPG_ADDR_BASE, 1, 0x017B  )
	ALPG_COMMAND( "YB<YB-L2E"    , ALPG_ADDR_BASE, 1, 0x018B  )
	ALPG_COMMAND( "YB<YB-L2F"    , ALPG_ADDR_BASE, 1, 0x019B  )
	ALPG_COMMAND( "YB<YB-L2G"    , ALPG_ADDR_BASE, 1, 0x01AB  )
	ALPG_COMMAND( "YB<YB-L2H"    , ALPG_ADDR_BASE, 1, 0x01BB  )
	ALPG_COMMAND( "YB<YB-L3A"    , ALPG_ADDR_BASE, 1, 0x01CB  )
	ALPG_COMMAND( "YB<YB-L3B"    , ALPG_ADDR_BASE, 1, 0x01DB  )
	ALPG_COMMAND( "YB<YB-L3C"    , ALPG_ADDR_BASE, 1, 0x01EB  )
	ALPG_COMMAND( "YB<YB-L3D"    , ALPG_ADDR_BASE, 1, 0x01FB  )
	ALPG_COMMAND( "YB<YB-L3E"    , ALPG_ADDR_BASE, 1, 0x020B  )
	ALPG_COMMAND( "YB<YB-L3F"    , ALPG_ADDR_BASE, 1, 0x021B  )
	ALPG_COMMAND( "YB<YB-L3G"    , ALPG_ADDR_BASE, 1, 0x022B  )
	ALPG_COMMAND( "YB<YB-L3H"    , ALPG_ADDR_BASE, 1, 0x023B  )
	ALPG_COMMAND( "YB<YB-L4A"    , ALPG_ADDR_BASE, 1, 0x024B  )
	ALPG_COMMAND( "YB<YB-L4B"    , ALPG_ADDR_BASE, 1, 0x025B  )
	ALPG_COMMAND( "YB<YB-L4C"    , ALPG_ADDR_BASE, 1, 0x026B  )
	ALPG_COMMAND( "YB<YB-L4D"    , ALPG_ADDR_BASE, 1, 0x027B  )
	ALPG_COMMAND( "YB<YB-L4E"    , ALPG_ADDR_BASE, 1, 0x028B  )
	ALPG_COMMAND( "YB<YB-L4F"    , ALPG_ADDR_BASE, 1, 0x029B  )
	ALPG_COMMAND( "YB<YB-L4G"    , ALPG_ADDR_BASE, 1, 0x02AB  )
	ALPG_COMMAND( "YB<YB-L4H"    , ALPG_ADDR_BASE, 1, 0x02BB  )
	ALPG_COMMAND( "YB<YB-"       , ALPG_ADDR_BASE, 5, 0x02DB  )

	ALPG_COMMAND( "YB<YB+D1^BX"  , ALPG_ADDR_BASE, 1, 0x000c  )
	ALPG_COMMAND( "YB<YB+D1A^BX" , ALPG_ADDR_BASE, 1, 0x000c  )
	ALPG_COMMAND( "YB<YB+D1B^BX" , ALPG_ADDR_BASE, 1, 0x001c  )
	ALPG_COMMAND( "YB<YB+D1C^BX" , ALPG_ADDR_BASE, 1, 0x002c  )
	ALPG_COMMAND( "YB<YB+D1D^BX" , ALPG_ADDR_BASE, 1, 0x003c  )
	ALPG_COMMAND( "YB<YB+D1E^BX" , ALPG_ADDR_BASE, 1, 0x004c  )
	ALPG_COMMAND( "YB<YB+D1F^BX" , ALPG_ADDR_BASE, 1, 0x005c  )
	ALPG_COMMAND( "YB<YB+D1G^BX" , ALPG_ADDR_BASE, 1, 0x006c  )
	ALPG_COMMAND( "YB<YB+D1H^BX" , ALPG_ADDR_BASE, 1, 0x007c  )
	ALPG_COMMAND( "YB<YB+D2^BX"  , ALPG_ADDR_BASE, 1, 0x008c  )
	ALPG_COMMAND( "YB<YB+D2A^BX" , ALPG_ADDR_BASE, 1, 0x008c  )
	ALPG_COMMAND( "YB<YB+D2B^BX" , ALPG_ADDR_BASE, 1, 0x009c  )
	ALPG_COMMAND( "YB<YB+D2C^BX" , ALPG_ADDR_BASE, 1, 0x00ac  )
	ALPG_COMMAND( "YB<YB+D2D^BX" , ALPG_ADDR_BASE, 1, 0x00bc  )

	ALPG_COMMAND( "YB<YB+L1A^BX" , ALPG_ADDR_BASE, 1, 0x00CC  )
	ALPG_COMMAND( "YB<YB+L1B^BX" , ALPG_ADDR_BASE, 1, 0x00DC  )
	ALPG_COMMAND( "YB<YB+L1C^BX" , ALPG_ADDR_BASE, 1, 0x00EC  )
	ALPG_COMMAND( "YB<YB+L1D^BX" , ALPG_ADDR_BASE, 1, 0x00FC  )
	ALPG_COMMAND( "YB<YB+L1E^BX" , ALPG_ADDR_BASE, 1, 0x010C  )
	ALPG_COMMAND( "YB<YB+L1F^BX" , ALPG_ADDR_BASE, 1, 0x011C  )
	ALPG_COMMAND( "YB<YB+L1G^BX" , ALPG_ADDR_BASE, 1, 0x012C  )
	ALPG_COMMAND( "YB<YB+L1H^BX" , ALPG_ADDR_BASE, 1, 0x013C  )
	ALPG_COMMAND( "YB<YB+L2A^BX" , ALPG_ADDR_BASE, 1, 0x014C  )
	ALPG_COMMAND( "YB<YB+L2B^BX" , ALPG_ADDR_BASE, 1, 0x015C  )
	ALPG_COMMAND( "YB<YB+L2C^BX" , ALPG_ADDR_BASE, 1, 0x016C  )
	ALPG_COMMAND( "YB<YB+L2D^BX" , ALPG_ADDR_BASE, 1, 0x017C  )
	ALPG_COMMAND( "YB<YB+L2E^BX" , ALPG_ADDR_BASE, 1, 0x018C  )
	ALPG_COMMAND( "YB<YB+L2F^BX" , ALPG_ADDR_BASE, 1, 0x019C  )
	ALPG_COMMAND( "YB<YB+L2G^BX" , ALPG_ADDR_BASE, 1, 0x01AC  )
	ALPG_COMMAND( "YB<YB+L2H^BX" , ALPG_ADDR_BASE, 1, 0x01BC  )
	ALPG_COMMAND( "YB<YB+L3A^BX" , ALPG_ADDR_BASE, 1, 0x01CC  )
	ALPG_COMMAND( "YB<YB+L3B^BX" , ALPG_ADDR_BASE, 1, 0x01DC  )
	ALPG_COMMAND( "YB<YB+L3C^BX" , ALPG_ADDR_BASE, 1, 0x01EC  )
	ALPG_COMMAND( "YB<YB+L3D^BX" , ALPG_ADDR_BASE, 1, 0x01FC  )
	ALPG_COMMAND( "YB<YB+L3E^BX" , ALPG_ADDR_BASE, 1, 0x020C  )
	ALPG_COMMAND( "YB<YB+L3F^BX" , ALPG_ADDR_BASE, 1, 0x021C  )
	ALPG_COMMAND( "YB<YB+L3G^BX" , ALPG_ADDR_BASE, 1, 0x022C  )
	ALPG_COMMAND( "YB<YB+L3H^BX" , ALPG_ADDR_BASE, 1, 0x023C  )
	ALPG_COMMAND( "YB<YB+L4A^BX" , ALPG_ADDR_BASE, 1, 0x024C  )
	ALPG_COMMAND( "YB<YB+L4B^BX" , ALPG_ADDR_BASE, 1, 0x025C  )
	ALPG_COMMAND( "YB<YB+L4C^BX" , ALPG_ADDR_BASE, 1, 0x026C  )
	ALPG_COMMAND( "YB<YB+L4D^BX" , ALPG_ADDR_BASE, 1, 0x027C  )
	ALPG_COMMAND( "YB<YB+L4E^BX" , ALPG_ADDR_BASE, 1, 0x028C  )
	ALPG_COMMAND( "YB<YB+L4F^BX" , ALPG_ADDR_BASE, 1, 0x029C  )
	ALPG_COMMAND( "YB<YB+L4G^BX" , ALPG_ADDR_BASE, 1, 0x02AC  )
	ALPG_COMMAND( "YB<YB+L4H^BX" , ALPG_ADDR_BASE, 1, 0x02BC  )

	ALPG_COMMAND( "YB<YB-D1^BX"  , ALPG_ADDR_BASE, 1, 0x000d  )
	ALPG_COMMAND( "YB<YB-D1A^BX" , ALPG_ADDR_BASE, 1, 0x000d  )
	ALPG_COMMAND( "YB<YB-D1B^BX" , ALPG_ADDR_BASE, 1, 0x001d  )
	ALPG_COMMAND( "YB<YB-D1C^BX" , ALPG_ADDR_BASE, 1, 0x002d  )
	ALPG_COMMAND( "YB<YB-D1D^BX" , ALPG_ADDR_BASE, 1, 0x003d  )
	ALPG_COMMAND( "YB<YB-D1E^BX" , ALPG_ADDR_BASE, 1, 0x004d  )
	ALPG_COMMAND( "YB<YB-D1F^BX" , ALPG_ADDR_BASE, 1, 0x005d  )
	ALPG_COMMAND( "YB<YB-D1G^BX" , ALPG_ADDR_BASE, 1, 0x006d  )
	ALPG_COMMAND( "YB<YB-D1H^BX" , ALPG_ADDR_BASE, 1, 0x007d  )
	ALPG_COMMAND( "YB<YB-D2^BX"  , ALPG_ADDR_BASE, 1, 0x008d  )
	ALPG_COMMAND( "YB<YB-D2A^BX" , ALPG_ADDR_BASE, 1, 0x008d  )
	ALPG_COMMAND( "YB<YB-D2B^BX" , ALPG_ADDR_BASE, 1, 0x009d  )
	ALPG_COMMAND( "YB<YB-D2C^BX" , ALPG_ADDR_BASE, 1, 0x00ad  )
	ALPG_COMMAND( "YB<YB-D2D^BX" , ALPG_ADDR_BASE, 1, 0x00bd  )

	ALPG_COMMAND( "YB<YB-L1A^BX" , ALPG_ADDR_BASE, 1, 0x00CD  )
	ALPG_COMMAND( "YB<YB-L1B^BX" , ALPG_ADDR_BASE, 1, 0x00DD  )
	ALPG_COMMAND( "YB<YB-L1C^BX" , ALPG_ADDR_BASE, 1, 0x00ED  )
	ALPG_COMMAND( "YB<YB-L1D^BX" , ALPG_ADDR_BASE, 1, 0x00FD  )
	ALPG_COMMAND( "YB<YB-L1E^BX" , ALPG_ADDR_BASE, 1, 0x010D  )
	ALPG_COMMAND( "YB<YB-L1F^BX" , ALPG_ADDR_BASE, 1, 0x011D  )
	ALPG_COMMAND( "YB<YB-L1G^BX" , ALPG_ADDR_BASE, 1, 0x012D  )
	ALPG_COMMAND( "YB<YB-L1H^BX" , ALPG_ADDR_BASE, 1, 0x013D  )
	ALPG_COMMAND( "YB<YB-L2A^BX" , ALPG_ADDR_BASE, 1, 0x014D  )
	ALPG_COMMAND( "YB<YB-L2B^BX" , ALPG_ADDR_BASE, 1, 0x015D  )
	ALPG_COMMAND( "YB<YB-L2C^BX" , ALPG_ADDR_BASE, 1, 0x016D  )
	ALPG_COMMAND( "YB<YB-L2D^BX" , ALPG_ADDR_BASE, 1, 0x017D  )
	ALPG_COMMAND( "YB<YB-L2E^BX" , ALPG_ADDR_BASE, 1, 0x018D  )
	ALPG_COMMAND( "YB<YB-L2F^BX" , ALPG_ADDR_BASE, 1, 0x019D  )
	ALPG_COMMAND( "YB<YB-L2G^BX" , ALPG_ADDR_BASE, 1, 0x01AD  )
	ALPG_COMMAND( "YB<YB-L2H^BX" , ALPG_ADDR_BASE, 1, 0x01BD  )
	ALPG_COMMAND( "YB<YB-L3A^BX" , ALPG_ADDR_BASE, 1, 0x01CD  )
	ALPG_COMMAND( "YB<YB-L3B^BX" , ALPG_ADDR_BASE, 1, 0x01DD  )
	ALPG_COMMAND( "YB<YB-L3C^BX" , ALPG_ADDR_BASE, 1, 0x01ED  )
	ALPG_COMMAND( "YB<YB-L3D^BX" , ALPG_ADDR_BASE, 1, 0x01FD  )
	ALPG_COMMAND( "YB<YB-L3E^BX" , ALPG_ADDR_BASE, 1, 0x020D  )
	ALPG_COMMAND( "YB<YB-L3F^BX" , ALPG_ADDR_BASE, 1, 0x021D  )
	ALPG_COMMAND( "YB<YB-L3G^BX" , ALPG_ADDR_BASE, 1, 0x022D  )
	ALPG_COMMAND( "YB<YB-L3H^BX" , ALPG_ADDR_BASE, 1, 0x023D  )
	ALPG_COMMAND( "YB<YB-L4A^BX" , ALPG_ADDR_BASE, 1, 0x024D  )
	ALPG_COMMAND( "YB<YB-L4B^BX" , ALPG_ADDR_BASE, 1, 0x025D  )
	ALPG_COMMAND( "YB<YB-L4C^BX" , ALPG_ADDR_BASE, 1, 0x026D  )
	ALPG_COMMAND( "YB<YB-L4D^BX" , ALPG_ADDR_BASE, 1, 0x027D  )
	ALPG_COMMAND( "YB<YB-L4E^BX" , ALPG_ADDR_BASE, 1, 0x028D  )
	ALPG_COMMAND( "YB<YB-L4F^BX" , ALPG_ADDR_BASE, 1, 0x029D  )
	ALPG_COMMAND( "YB<YB-L4G^BX" , ALPG_ADDR_BASE, 1, 0x02AD  )
	ALPG_COMMAND( "YB<YB-L4H^BX" , ALPG_ADDR_BASE, 1, 0x02BD  )

	ALPG_COMMAND( "YB<YB+D1+BX"  , ALPG_ADDR_BASE, 1, 0x000e  )
	ALPG_COMMAND( "YB<YB+D1A+BX" , ALPG_ADDR_BASE, 1, 0x000e  )
	ALPG_COMMAND( "YB<YB+D1B+BX" , ALPG_ADDR_BASE, 1, 0x001e  )
	ALPG_COMMAND( "YB<YB+D1C+BX" , ALPG_ADDR_BASE, 1, 0x002e  )
	ALPG_COMMAND( "YB<YB+D1D+BX" , ALPG_ADDR_BASE, 1, 0x003e  )
	ALPG_COMMAND( "YB<YB+D1E+BX" , ALPG_ADDR_BASE, 1, 0x004e  )
	ALPG_COMMAND( "YB<YB+D1F+BX" , ALPG_ADDR_BASE, 1, 0x005e  )
	ALPG_COMMAND( "YB<YB+D1G+BX" , ALPG_ADDR_BASE, 1, 0x006e  )
	ALPG_COMMAND( "YB<YB+D1H+BX" , ALPG_ADDR_BASE, 1, 0x007e  )
	ALPG_COMMAND( "YB<YB+D2+BX"  , ALPG_ADDR_BASE, 1, 0x008e  )
	ALPG_COMMAND( "YB<YB+D2A+BX" , ALPG_ADDR_BASE, 1, 0x008e  )
	ALPG_COMMAND( "YB<YB+D2B+BX" , ALPG_ADDR_BASE, 1, 0x009e  )
	ALPG_COMMAND( "YB<YB+D2C+BX" , ALPG_ADDR_BASE, 1, 0x00ae  )
	ALPG_COMMAND( "YB<YB+D2D+BX" , ALPG_ADDR_BASE, 1, 0x00be  )

	ALPG_COMMAND( "YB<YB+L1A+BX" , ALPG_ADDR_BASE, 1, 0x00CE  )
	ALPG_COMMAND( "YB<YB+L1B+BX" , ALPG_ADDR_BASE, 1, 0x00DE  )
	ALPG_COMMAND( "YB<YB+L1C+BX" , ALPG_ADDR_BASE, 1, 0x00EE  )
	ALPG_COMMAND( "YB<YB+L1D+BX" , ALPG_ADDR_BASE, 1, 0x00FE  )
	ALPG_COMMAND( "YB<YB+L1E+BX" , ALPG_ADDR_BASE, 1, 0x010E  )
	ALPG_COMMAND( "YB<YB+L1F+BX" , ALPG_ADDR_BASE, 1, 0x011E  )
	ALPG_COMMAND( "YB<YB+L1G+BX" , ALPG_ADDR_BASE, 1, 0x012E  )
	ALPG_COMMAND( "YB<YB+L1H+BX" , ALPG_ADDR_BASE, 1, 0x013E  )
	ALPG_COMMAND( "YB<YB+L2A+BX" , ALPG_ADDR_BASE, 1, 0x014E  )
	ALPG_COMMAND( "YB<YB+L2B+BX" , ALPG_ADDR_BASE, 1, 0x015E  )
	ALPG_COMMAND( "YB<YB+L2C+BX" , ALPG_ADDR_BASE, 1, 0x016E  )
	ALPG_COMMAND( "YB<YB+L2D+BX" , ALPG_ADDR_BASE, 1, 0x017E  )
	ALPG_COMMAND( "YB<YB+L2E+BX" , ALPG_ADDR_BASE, 1, 0x018E  )
	ALPG_COMMAND( "YB<YB+L2F+BX" , ALPG_ADDR_BASE, 1, 0x019E  )
	ALPG_COMMAND( "YB<YB+L2G+BX" , ALPG_ADDR_BASE, 1, 0x01AE  )
	ALPG_COMMAND( "YB<YB+L2H+BX" , ALPG_ADDR_BASE, 1, 0x01BE  )
	ALPG_COMMAND( "YB<YB+L3A+BX" , ALPG_ADDR_BASE, 1, 0x01CE  )
	ALPG_COMMAND( "YB<YB+L3B+BX" , ALPG_ADDR_BASE, 1, 0x01DE  )
	ALPG_COMMAND( "YB<YB+L3C+BX" , ALPG_ADDR_BASE, 1, 0x01EE  )
	ALPG_COMMAND( "YB<YB+L3D+BX" , ALPG_ADDR_BASE, 1, 0x01FE  )
	ALPG_COMMAND( "YB<YB+L3E+BX" , ALPG_ADDR_BASE, 1, 0x020E  )
	ALPG_COMMAND( "YB<YB+L3F+BX" , ALPG_ADDR_BASE, 1, 0x021E  )
	ALPG_COMMAND( "YB<YB+L3G+BX" , ALPG_ADDR_BASE, 1, 0x022E  )
	ALPG_COMMAND( "YB<YB+L3H+BX" , ALPG_ADDR_BASE, 1, 0x023E  )
	ALPG_COMMAND( "YB<YB+L4A+BX" , ALPG_ADDR_BASE, 1, 0x024E  )
	ALPG_COMMAND( "YB<YB+L4B+BX" , ALPG_ADDR_BASE, 1, 0x025E  )
	ALPG_COMMAND( "YB<YB+L4C+BX" , ALPG_ADDR_BASE, 1, 0x026E  )
	ALPG_COMMAND( "YB<YB+L4D+BX" , ALPG_ADDR_BASE, 1, 0x027E  )
	ALPG_COMMAND( "YB<YB+L4E+BX" , ALPG_ADDR_BASE, 1, 0x028E  )
	ALPG_COMMAND( "YB<YB+L4F+BX" , ALPG_ADDR_BASE, 1, 0x029E  )
	ALPG_COMMAND( "YB<YB+L4G+BX" , ALPG_ADDR_BASE, 1, 0x02AE  )
	ALPG_COMMAND( "YB<YB+L4H+BX" , ALPG_ADDR_BASE, 1, 0x02BE  )

	ALPG_COMMAND( "YB<YB-D1-BX"  , ALPG_ADDR_BASE, 1, 0x000f  )
	ALPG_COMMAND( "YB<YB-D1A-BX" , ALPG_ADDR_BASE, 1, 0x000f  )
	ALPG_COMMAND( "YB<YB-D1B-BX" , ALPG_ADDR_BASE, 1, 0x001f  )
	ALPG_COMMAND( "YB<YB-D1C-BX" , ALPG_ADDR_BASE, 1, 0x002f  )
	ALPG_COMMAND( "YB<YB-D1D-BX" , ALPG_ADDR_BASE, 1, 0x003f  )
	ALPG_COMMAND( "YB<YB-D1E-BX" , ALPG_ADDR_BASE, 1, 0x004f  )
	ALPG_COMMAND( "YB<YB-D1F-BX" , ALPG_ADDR_BASE, 1, 0x005f  )
	ALPG_COMMAND( "YB<YB-D1G-BX" , ALPG_ADDR_BASE, 1, 0x006f  )
	ALPG_COMMAND( "YB<YB-D1H-BX" , ALPG_ADDR_BASE, 1, 0x007f  )
	ALPG_COMMAND( "YB<YB-D2-BX"  , ALPG_ADDR_BASE, 1, 0x008f  )
	ALPG_COMMAND( "YB<YB-D2A-BX" , ALPG_ADDR_BASE, 1, 0x008f  )
	ALPG_COMMAND( "YB<YB-D2B-BX" , ALPG_ADDR_BASE, 1, 0x009f  )
	ALPG_COMMAND( "YB<YB-D2C-BX" , ALPG_ADDR_BASE, 1, 0x00af  )
	ALPG_COMMAND( "YB<YB-D2D-BX" , ALPG_ADDR_BASE, 1, 0x00bf  )

	ALPG_COMMAND( "YB<YB-L1A-BX" , ALPG_ADDR_BASE, 1, 0x00CF  )
	ALPG_COMMAND( "YB<YB-L1B-BX" , ALPG_ADDR_BASE, 1, 0x00DF  )
	ALPG_COMMAND( "YB<YB-L1C-BX" , ALPG_ADDR_BASE, 1, 0x00EF  )
	ALPG_COMMAND( "YB<YB-L1D-BX" , ALPG_ADDR_BASE, 1, 0x00FF  )
	ALPG_COMMAND( "YB<YB-L1E-BX" , ALPG_ADDR_BASE, 1, 0x010F  )
	ALPG_COMMAND( "YB<YB-L1F-BX" , ALPG_ADDR_BASE, 1, 0x011F  )
	ALPG_COMMAND( "YB<YB-L1G-BX" , ALPG_ADDR_BASE, 1, 0x012F  )
	ALPG_COMMAND( "YB<YB-L1H-BX" , ALPG_ADDR_BASE, 1, 0x013F  )
	ALPG_COMMAND( "YB<YB-L2A-BX" , ALPG_ADDR_BASE, 1, 0x014F  )
	ALPG_COMMAND( "YB<YB-L2B-BX" , ALPG_ADDR_BASE, 1, 0x015F  )
	ALPG_COMMAND( "YB<YB-L2C-BX" , ALPG_ADDR_BASE, 1, 0x016F  )
	ALPG_COMMAND( "YB<YB-L2D-BX" , ALPG_ADDR_BASE, 1, 0x017F  )
	ALPG_COMMAND( "YB<YB-L2E-BX" , ALPG_ADDR_BASE, 1, 0x018F  )
	ALPG_COMMAND( "YB<YB-L2F-BX" , ALPG_ADDR_BASE, 1, 0x019F  )
	ALPG_COMMAND( "YB<YB-L2G-BX" , ALPG_ADDR_BASE, 1, 0x01AF  )
	ALPG_COMMAND( "YB<YB-L2H-BX" , ALPG_ADDR_BASE, 1, 0x01BF  )
	ALPG_COMMAND( "YB<YB-L3A-BX" , ALPG_ADDR_BASE, 1, 0x01CF  )
	ALPG_COMMAND( "YB<YB-L3B-BX" , ALPG_ADDR_BASE, 1, 0x01DF  )
	ALPG_COMMAND( "YB<YB-L3C-BX" , ALPG_ADDR_BASE, 1, 0x01EF  )
	ALPG_COMMAND( "YB<YB-L3D-BX" , ALPG_ADDR_BASE, 1, 0x01FF  )
	ALPG_COMMAND( "YB<YB-L3E-BX" , ALPG_ADDR_BASE, 1, 0x020F  )
	ALPG_COMMAND( "YB<YB-L3F-BX" , ALPG_ADDR_BASE, 1, 0x021F  )
	ALPG_COMMAND( "YB<YB-L3G-BX" , ALPG_ADDR_BASE, 1, 0x022F  )
	ALPG_COMMAND( "YB<YB-L3H-BX" , ALPG_ADDR_BASE, 1, 0x023F  )
	ALPG_COMMAND( "YB<YB-L4A-BX" , ALPG_ADDR_BASE, 1, 0x024F  )
	ALPG_COMMAND( "YB<YB-L4B-BX" , ALPG_ADDR_BASE, 1, 0x025F  )
	ALPG_COMMAND( "YB<YB-L4C-BX" , ALPG_ADDR_BASE, 1, 0x026F  )
	ALPG_COMMAND( "YB<YB-L4D-BX" , ALPG_ADDR_BASE, 1, 0x027F  )
	ALPG_COMMAND( "YB<YB-L4E-BX" , ALPG_ADDR_BASE, 1, 0x028F  )
	ALPG_COMMAND( "YB<YB-L4F-BX" , ALPG_ADDR_BASE, 1, 0x029F  )
	ALPG_COMMAND( "YB<YB-L4G-BX" , ALPG_ADDR_BASE, 1, 0x02AF  )
	ALPG_COMMAND( "YB<YB-L4H-BX" , ALPG_ADDR_BASE, 1, 0x02BF  )

	ALPG_COMMAND( "Z<Z"          , ALPG_ADDR_BASE, 2, 0x0000  )	//Z
	ALPG_COMMAND( "Z<Z+1"        , ALPG_ADDR_BASE, 2, 0x0001  )
	ALPG_COMMAND( "Z<Z-1"        , ALPG_ADDR_BASE, 2, 0x0002  )
	ALPG_COMMAND( "Z<ZH"         , ALPG_ADDR_BASE, 2, 0x0003  )
	ALPG_COMMAND( "Z<Z*2"        , ALPG_ADDR_BASE, 2, 0x0004  )
	ALPG_COMMAND( "Z</Z"         , ALPG_ADDR_BASE, 2, 0x0005  )
	ALPG_COMMAND( "Z<0"          , ALPG_ADDR_BASE, 2, 0x0006  )
	ALPG_COMMAND( "Z<Z+1^BX"     , ALPG_ADDR_BASE, 2, 0x0007  )
	ALPG_COMMAND( "Z<Z-1^BX"     , ALPG_ADDR_BASE, 2, 0x0008  )
	ALPG_COMMAND( "Z<Z+1^CY"     , ALPG_ADDR_BASE, 2, 0x0009  )
	ALPG_COMMAND( "Z<Z-1^CY"     , ALPG_ADDR_BASE, 2, 0x000a  )
	ALPG_COMMAND( "Z<Z+ZD"       , ALPG_ADDR_BASE, 2, 0x000b  )
	ALPG_COMMAND( "Z<Z-ZD"       , ALPG_ADDR_BASE, 2, 0x000c  )
	ALPG_COMMAND( "Z<Z+ZD^BX"    , ALPG_ADDR_BASE, 2, 0x000d  )
	ALPG_COMMAND( "Z<Z-ZD^BX"    , ALPG_ADDR_BASE, 2, 0x000e  )
	ALPG_COMMAND( "Z<Z+ZD^CY"    , ALPG_ADDR_BASE, 2, 0x000f  )
	ALPG_COMMAND( "Z<Z-ZD^CY"    , ALPG_ADDR_BASE, 2, 0x0010  )

//CURRENT ADDRESS
//#include "CurrAddrXSyntax.h"
//#include "CurrAddrYSyntax.h"

//N/B Register
	ALPG_COMMAND( "N<N"         , ALPG_NB_REG   , 0, 0x000   )
	ALPG_COMMAND( "N<N+1"       , ALPG_NB_REG   , 0, 0x001   )
	ALPG_COMMAND( "N<N-1"       , ALPG_NB_REG   , 0, 0x002   )
	ALPG_COMMAND( "N<NH"        , ALPG_NB_REG   , 0, 0x003   )
	ALPG_COMMAND( "N<0"         , ALPG_NB_REG   , 0, 0x004   )
	ALPG_COMMAND( "N</N"        , ALPG_NB_REG   , 0, 0x005   )
	ALPG_COMMAND( "N<ND"        , ALPG_NB_REG   , 0, 0x006   )
	ALPG_COMMAND( "N<ND1"       , ALPG_NB_REG   , 0, 0x006   )
	ALPG_COMMAND( "N<ND2"       , ALPG_NB_REG   , 0, 0x016   )
	ALPG_COMMAND( "N<ND3"       , ALPG_NB_REG   , 0, 0x026   )
	ALPG_COMMAND( "N<ND4"       , ALPG_NB_REG   , 0, 0x036   )
	ALPG_COMMAND( "N<ND5"       , ALPG_NB_REG   , 0, 0x046   )
	ALPG_COMMAND( "N<ND6"       , ALPG_NB_REG   , 0, 0x056   )
	ALPG_COMMAND( "N<ND7"       , ALPG_NB_REG   , 0, 0x066   )
	ALPG_COMMAND( "N<ND8"       , ALPG_NB_REG   , 0, 0x076   )
	ALPG_COMMAND( "N<ND9"       , ALPG_NB_REG   , 0, 0x086   )
	ALPG_COMMAND( "N<ND10"      , ALPG_NB_REG   , 0, 0x096   )
	ALPG_COMMAND( "N<ND11"      , ALPG_NB_REG   , 0, 0x0A6   )
	ALPG_COMMAND( "N<ND12"      , ALPG_NB_REG   , 0, 0x0B6   )
	ALPG_COMMAND( "N<ND13"      , ALPG_NB_REG   , 0, 0x0C6   )
	ALPG_COMMAND( "N<ND14"      , ALPG_NB_REG   , 0, 0x0D6   )
	ALPG_COMMAND( "N<ND15"      , ALPG_NB_REG   , 0, 0x0E6   )
	ALPG_COMMAND( "N<ND16"      , ALPG_NB_REG   , 0, 0x0F6   )
	ALPG_COMMAND( "N<ND17"      , ALPG_NB_REG   , 0, 0x106   )
	ALPG_COMMAND( "N<ND18"      , ALPG_NB_REG   , 0, 0x116   )
	ALPG_COMMAND( "N<ND19"      , ALPG_NB_REG   , 0, 0x126   )
	ALPG_COMMAND( "N<ND20"      , ALPG_NB_REG   , 0, 0x136   )
	ALPG_COMMAND( "N<ND21"      , ALPG_NB_REG   , 0, 0x146   )
	ALPG_COMMAND( "N<ND22"      , ALPG_NB_REG   , 0, 0x156   )
	ALPG_COMMAND( "N<ND23"      , ALPG_NB_REG   , 0, 0x166   )
	ALPG_COMMAND( "N<ND24"      , ALPG_NB_REG   , 0, 0x176   )
	ALPG_COMMAND( "N<ND25"      , ALPG_NB_REG   , 0, 0x186   )
	ALPG_COMMAND( "N<ND26"      , ALPG_NB_REG   , 0, 0x196   )
	ALPG_COMMAND( "N<ND27"      , ALPG_NB_REG   , 0, 0x1A6   )
	ALPG_COMMAND( "N<ND28"      , ALPG_NB_REG   , 0, 0x1B6   )
	ALPG_COMMAND( "N<ND29"      , ALPG_NB_REG   , 0, 0x1C6   )
	ALPG_COMMAND( "N<ND30"      , ALPG_NB_REG   , 0, 0x1D6   )
	ALPG_COMMAND( "N<ND31"      , ALPG_NB_REG   , 0, 0x1E6   )
	ALPG_COMMAND( "N<ND32"      , ALPG_NB_REG   , 0, 0x1F6   )
	ALPG_COMMAND( "N<N+ND"      , ALPG_NB_REG   , 0, 0x007   )
	ALPG_COMMAND( "N<N+ND1"     , ALPG_NB_REG   , 0, 0x007   )
	ALPG_COMMAND( "N<N+ND2"     , ALPG_NB_REG   , 0, 0x017   )
	ALPG_COMMAND( "N<N+ND3"     , ALPG_NB_REG   , 0, 0x027   )
	ALPG_COMMAND( "N<N+ND4"     , ALPG_NB_REG   , 0, 0x037   )
	ALPG_COMMAND( "N<N+ND5"     , ALPG_NB_REG   , 0, 0x047   )
	ALPG_COMMAND( "N<N+ND6"     , ALPG_NB_REG   , 0, 0x057   )
	ALPG_COMMAND( "N<N+ND7"     , ALPG_NB_REG   , 0, 0x067   )
	ALPG_COMMAND( "N<N+ND8"     , ALPG_NB_REG   , 0, 0x077   )
	ALPG_COMMAND( "N<N+ND9"     , ALPG_NB_REG   , 0, 0x087   )
	ALPG_COMMAND( "N<N+ND10"    , ALPG_NB_REG   , 0, 0x097   )
	ALPG_COMMAND( "N<N+ND11"    , ALPG_NB_REG   , 0, 0x0A7   )
	ALPG_COMMAND( "N<N+ND12"    , ALPG_NB_REG   , 0, 0x0B7   )
	ALPG_COMMAND( "N<N+ND13"    , ALPG_NB_REG   , 0, 0x0C7   )
	ALPG_COMMAND( "N<N+ND14"    , ALPG_NB_REG   , 0, 0x0D7   )
	ALPG_COMMAND( "N<N+ND15"    , ALPG_NB_REG   , 0, 0x0E7   )
	ALPG_COMMAND( "N<N+ND16"    , ALPG_NB_REG   , 0, 0x0F7   )
	ALPG_COMMAND( "N<N+ND17"    , ALPG_NB_REG   , 0, 0x107   )
	ALPG_COMMAND( "N<N+ND18"    , ALPG_NB_REG   , 0, 0x117   )
	ALPG_COMMAND( "N<N+ND19"    , ALPG_NB_REG   , 0, 0x127   )
	ALPG_COMMAND( "N<N+ND20"    , ALPG_NB_REG   , 0, 0x137   )
	ALPG_COMMAND( "N<N+ND21"    , ALPG_NB_REG   , 0, 0x147   )
	ALPG_COMMAND( "N<N+ND22"    , ALPG_NB_REG   , 0, 0x157   )
	ALPG_COMMAND( "N<N+ND23"    , ALPG_NB_REG   , 0, 0x167   )
	ALPG_COMMAND( "N<N+ND24"    , ALPG_NB_REG   , 0, 0x177   )
	ALPG_COMMAND( "N<N+ND25"    , ALPG_NB_REG   , 0, 0x187   )
	ALPG_COMMAND( "N<N+ND26"    , ALPG_NB_REG   , 0, 0x197   )
	ALPG_COMMAND( "N<N+ND27"    , ALPG_NB_REG   , 0, 0x1A7   )
	ALPG_COMMAND( "N<N+ND28"    , ALPG_NB_REG   , 0, 0x1B7   )
	ALPG_COMMAND( "N<N+ND29"    , ALPG_NB_REG   , 0, 0x1C7   )
	ALPG_COMMAND( "N<N+ND30"    , ALPG_NB_REG   , 0, 0x1D7   )
	ALPG_COMMAND( "N<N+ND31"    , ALPG_NB_REG   , 0, 0x1E7   )
	ALPG_COMMAND( "N<N+ND32"    , ALPG_NB_REG   , 0, 0x1F7   )
	ALPG_COMMAND( "N<N-ND"      , ALPG_NB_REG   , 0, 0x008   )
	ALPG_COMMAND( "N<N-ND1"     , ALPG_NB_REG   , 0, 0x008   )
	ALPG_COMMAND( "N<N-ND2"     , ALPG_NB_REG   , 0, 0x018   )
	ALPG_COMMAND( "N<N-ND3"     , ALPG_NB_REG   , 0, 0x028   )
	ALPG_COMMAND( "N<N-ND4"     , ALPG_NB_REG   , 0, 0x038   )
	ALPG_COMMAND( "N<N-ND5"     , ALPG_NB_REG   , 0, 0x048   )
	ALPG_COMMAND( "N<N-ND6"     , ALPG_NB_REG   , 0, 0x058   )
	ALPG_COMMAND( "N<N-ND7"     , ALPG_NB_REG   , 0, 0x068   )
	ALPG_COMMAND( "N<N-ND8"     , ALPG_NB_REG   , 0, 0x078   )
	ALPG_COMMAND( "N<N-ND9"     , ALPG_NB_REG   , 0, 0x088   )
	ALPG_COMMAND( "N<N-ND10"    , ALPG_NB_REG   , 0, 0x098   )
	ALPG_COMMAND( "N<N-ND11"    , ALPG_NB_REG   , 0, 0x0A8   )
	ALPG_COMMAND( "N<N-ND12"    , ALPG_NB_REG   , 0, 0x0B8   )
	ALPG_COMMAND( "N<N-ND13"    , ALPG_NB_REG   , 0, 0x0C8   )
	ALPG_COMMAND( "N<N-ND14"    , ALPG_NB_REG   , 0, 0x0D8   )
	ALPG_COMMAND( "N<N-ND15"    , ALPG_NB_REG   , 0, 0x0E8   )
	ALPG_COMMAND( "N<N-ND16"    , ALPG_NB_REG   , 0, 0x0F8   )
	ALPG_COMMAND( "N<N-ND17"    , ALPG_NB_REG   , 0, 0x108   )
	ALPG_COMMAND( "N<N-ND18"    , ALPG_NB_REG   , 0, 0x118   )
	ALPG_COMMAND( "N<N-ND19"    , ALPG_NB_REG   , 0, 0x128   )
	ALPG_COMMAND( "N<N-ND20"    , ALPG_NB_REG   , 0, 0x138   )
	ALPG_COMMAND( "N<N-ND21"    , ALPG_NB_REG   , 0, 0x148   )
	ALPG_COMMAND( "N<N-ND22"    , ALPG_NB_REG   , 0, 0x158   )
	ALPG_COMMAND( "N<N-ND23"    , ALPG_NB_REG   , 0, 0x168   )
	ALPG_COMMAND( "N<N-ND24"    , ALPG_NB_REG   , 0, 0x178   )
	ALPG_COMMAND( "N<N-ND25"    , ALPG_NB_REG   , 0, 0x188   )
	ALPG_COMMAND( "N<N-ND26"    , ALPG_NB_REG   , 0, 0x198   )
	ALPG_COMMAND( "N<N-ND27"    , ALPG_NB_REG   , 0, 0x1A8   )
	ALPG_COMMAND( "N<N-ND28"    , ALPG_NB_REG   , 0, 0x1B8   )
	ALPG_COMMAND( "N<N-ND29"    , ALPG_NB_REG   , 0, 0x1C8   )
	ALPG_COMMAND( "N<N-ND30"    , ALPG_NB_REG   , 0, 0x1D8   )
	ALPG_COMMAND( "N<N-ND31"    , ALPG_NB_REG   , 0, 0x1E8   )
	ALPG_COMMAND( "N<N-ND32"    , ALPG_NB_REG   , 0, 0x1F8   )

	ALPG_COMMAND( "B<B"         , ALPG_NB_REG   , 1, 0x000   )
	ALPG_COMMAND( "B<B+1"       , ALPG_NB_REG   , 1, 0x001   )
	ALPG_COMMAND( "B<B-1"       , ALPG_NB_REG   , 1, 0x002   )
	ALPG_COMMAND( "B<BH"        , ALPG_NB_REG   , 1, 0x003   )
	ALPG_COMMAND( "B<0"         , ALPG_NB_REG   , 1, 0x004   )
	ALPG_COMMAND( "B</B"        , ALPG_NB_REG   , 1, 0x005   )
	ALPG_COMMAND( "B<BD"        , ALPG_NB_REG   , 1, 0x006   )
	ALPG_COMMAND( "B<BD1"       , ALPG_NB_REG   , 1, 0x006   )
	ALPG_COMMAND( "B<BD2"       , ALPG_NB_REG   , 1, 0x016   )
	ALPG_COMMAND( "B<BD3"       , ALPG_NB_REG   , 1, 0x026   )
	ALPG_COMMAND( "B<BD4"       , ALPG_NB_REG   , 1, 0x036   )
	ALPG_COMMAND( "B<BD5"       , ALPG_NB_REG   , 1, 0x046   )
	ALPG_COMMAND( "B<BD6"       , ALPG_NB_REG   , 1, 0x056   )
	ALPG_COMMAND( "B<BD7"       , ALPG_NB_REG   , 1, 0x066   )
	ALPG_COMMAND( "B<BD8"       , ALPG_NB_REG   , 1, 0x076   )
	ALPG_COMMAND( "B<BD9"       , ALPG_NB_REG   , 1, 0x086   )
	ALPG_COMMAND( "B<BD10"      , ALPG_NB_REG   , 1, 0x096   )
	ALPG_COMMAND( "B<BD11"      , ALPG_NB_REG   , 1, 0x0A6   )
	ALPG_COMMAND( "B<BD12"      , ALPG_NB_REG   , 1, 0x0B6   )
	ALPG_COMMAND( "B<BD13"      , ALPG_NB_REG   , 1, 0x0C6   )
	ALPG_COMMAND( "B<BD14"      , ALPG_NB_REG   , 1, 0x0D6   )
	ALPG_COMMAND( "B<BD15"      , ALPG_NB_REG   , 1, 0x0E6   )
	ALPG_COMMAND( "B<BD16"      , ALPG_NB_REG   , 1, 0x0F6   )
	ALPG_COMMAND( "B<BD17"      , ALPG_NB_REG   , 1, 0x106   )
	ALPG_COMMAND( "B<BD18"      , ALPG_NB_REG   , 1, 0x116   )
	ALPG_COMMAND( "B<BD19"      , ALPG_NB_REG   , 1, 0x126   )
	ALPG_COMMAND( "B<BD20"      , ALPG_NB_REG   , 1, 0x136   )
	ALPG_COMMAND( "B<BD21"      , ALPG_NB_REG   , 1, 0x146   )
	ALPG_COMMAND( "B<BD22"      , ALPG_NB_REG   , 1, 0x156   )
	ALPG_COMMAND( "B<BD23"      , ALPG_NB_REG   , 1, 0x166   )
	ALPG_COMMAND( "B<BD24"      , ALPG_NB_REG   , 1, 0x176   )
	ALPG_COMMAND( "B<BD25"      , ALPG_NB_REG   , 1, 0x186   )
	ALPG_COMMAND( "B<BD26"      , ALPG_NB_REG   , 1, 0x196   )
	ALPG_COMMAND( "B<BD27"      , ALPG_NB_REG   , 1, 0x1A6   )
	ALPG_COMMAND( "B<BD28"      , ALPG_NB_REG   , 1, 0x1B6   )
	ALPG_COMMAND( "B<BD29"      , ALPG_NB_REG   , 1, 0x1C6   )
	ALPG_COMMAND( "B<BD30"      , ALPG_NB_REG   , 1, 0x1D6   )
	ALPG_COMMAND( "B<BD31"      , ALPG_NB_REG   , 1, 0x1E6   )
	ALPG_COMMAND( "B<BD32"      , ALPG_NB_REG   , 1, 0x1F6   )
	ALPG_COMMAND( "B<B+BD"      , ALPG_NB_REG   , 1, 0x007   )
	ALPG_COMMAND( "B<B+BD1"     , ALPG_NB_REG   , 1, 0x007   )
	ALPG_COMMAND( "B<B+BD2"     , ALPG_NB_REG   , 1, 0x017   )
	ALPG_COMMAND( "B<B+BD3"     , ALPG_NB_REG   , 1, 0x027   )
	ALPG_COMMAND( "B<B+BD4"     , ALPG_NB_REG   , 1, 0x037   )
	ALPG_COMMAND( "B<B+BD5"     , ALPG_NB_REG   , 1, 0x047   )
	ALPG_COMMAND( "B<B+BD6"     , ALPG_NB_REG   , 1, 0x057   )
	ALPG_COMMAND( "B<B+BD7"     , ALPG_NB_REG   , 1, 0x067   )
	ALPG_COMMAND( "B<B+BD8"     , ALPG_NB_REG   , 1, 0x077   )
	ALPG_COMMAND( "B<B+BD9"     , ALPG_NB_REG   , 1, 0x087   )
	ALPG_COMMAND( "B<B+BD10"    , ALPG_NB_REG   , 1, 0x097   )
	ALPG_COMMAND( "B<B+BD11"    , ALPG_NB_REG   , 1, 0x0A7   )
	ALPG_COMMAND( "B<B+BD12"    , ALPG_NB_REG   , 1, 0x0B7   )
	ALPG_COMMAND( "B<B+BD13"    , ALPG_NB_REG   , 1, 0x0C7   )
	ALPG_COMMAND( "B<B+BD14"    , ALPG_NB_REG   , 1, 0x0D7   )
	ALPG_COMMAND( "B<B+BD15"    , ALPG_NB_REG   , 1, 0x0E7   )
	ALPG_COMMAND( "B<B+BD16"    , ALPG_NB_REG   , 1, 0x0F7   )
	ALPG_COMMAND( "B<B+BD17"    , ALPG_NB_REG   , 1, 0x107   )
	ALPG_COMMAND( "B<B+BD18"    , ALPG_NB_REG   , 1, 0x117   )
	ALPG_COMMAND( "B<B+BD19"    , ALPG_NB_REG   , 1, 0x127   )
	ALPG_COMMAND( "B<B+BD20"    , ALPG_NB_REG   , 1, 0x137   )
	ALPG_COMMAND( "B<B+BD21"    , ALPG_NB_REG   , 1, 0x147   )
	ALPG_COMMAND( "B<B+BD22"    , ALPG_NB_REG   , 1, 0x157   )
	ALPG_COMMAND( "B<B+BD23"    , ALPG_NB_REG   , 1, 0x167   )
	ALPG_COMMAND( "B<B+BD24"    , ALPG_NB_REG   , 1, 0x177   )
	ALPG_COMMAND( "B<B+BD25"    , ALPG_NB_REG   , 1, 0x187   )
	ALPG_COMMAND( "B<B+BD26"    , ALPG_NB_REG   , 1, 0x197   )
	ALPG_COMMAND( "B<B+BD27"    , ALPG_NB_REG   , 1, 0x1A7   )
	ALPG_COMMAND( "B<B+BD28"    , ALPG_NB_REG   , 1, 0x1B7   )
	ALPG_COMMAND( "B<B+BD29"    , ALPG_NB_REG   , 1, 0x1C7   )
	ALPG_COMMAND( "B<B+BD30"    , ALPG_NB_REG   , 1, 0x1D7   )
	ALPG_COMMAND( "B<B+BD31"    , ALPG_NB_REG   , 1, 0x1E7   )
	ALPG_COMMAND( "B<B+BD32"    , ALPG_NB_REG   , 1, 0x1F7   )
	ALPG_COMMAND( "B<B-BD"      , ALPG_NB_REG   , 1, 0x008   )
	ALPG_COMMAND( "B<B-BD1"     , ALPG_NB_REG   , 1, 0x008   )
	ALPG_COMMAND( "B<B-BD2"     , ALPG_NB_REG   , 1, 0x018   )
	ALPG_COMMAND( "B<B-BD3"     , ALPG_NB_REG   , 1, 0x028   )
	ALPG_COMMAND( "B<B-BD4"     , ALPG_NB_REG   , 1, 0x038   )
	ALPG_COMMAND( "B<B-BD5"     , ALPG_NB_REG   , 1, 0x048   )
	ALPG_COMMAND( "B<B-BD6"     , ALPG_NB_REG   , 1, 0x058   )
	ALPG_COMMAND( "B<B-BD7"     , ALPG_NB_REG   , 1, 0x068   )
	ALPG_COMMAND( "B<B-BD8"     , ALPG_NB_REG   , 1, 0x078   )
	ALPG_COMMAND( "B<B-BD9"     , ALPG_NB_REG   , 1, 0x088   )
	ALPG_COMMAND( "B<B-BD10"    , ALPG_NB_REG   , 1, 0x098   )
	ALPG_COMMAND( "B<B-BD11"    , ALPG_NB_REG   , 1, 0x0A8   )
	ALPG_COMMAND( "B<B-BD12"    , ALPG_NB_REG   , 1, 0x0B8   )
	ALPG_COMMAND( "B<B-BD13"    , ALPG_NB_REG   , 1, 0x0C8   )
	ALPG_COMMAND( "B<B-BD14"    , ALPG_NB_REG   , 1, 0x0D8   )
	ALPG_COMMAND( "B<B-BD15"    , ALPG_NB_REG   , 1, 0x0E8   )
	ALPG_COMMAND( "B<B-BD16"    , ALPG_NB_REG   , 1, 0x0F8   )
	ALPG_COMMAND( "B<B-BD17"    , ALPG_NB_REG   , 1, 0x108   )
	ALPG_COMMAND( "B<B-BD18"    , ALPG_NB_REG   , 1, 0x118   )
	ALPG_COMMAND( "B<B-BD19"    , ALPG_NB_REG   , 1, 0x128   )
	ALPG_COMMAND( "B<B-BD20"    , ALPG_NB_REG   , 1, 0x138   )
	ALPG_COMMAND( "B<B-BD21"    , ALPG_NB_REG   , 1, 0x148   )
	ALPG_COMMAND( "B<B-BD22"    , ALPG_NB_REG   , 1, 0x158   )
	ALPG_COMMAND( "B<B-BD23"    , ALPG_NB_REG   , 1, 0x168   )
	ALPG_COMMAND( "B<B-BD24"    , ALPG_NB_REG   , 1, 0x178   )
	ALPG_COMMAND( "B<B-BD25"    , ALPG_NB_REG   , 1, 0x188   )
	ALPG_COMMAND( "B<B-BD26"    , ALPG_NB_REG   , 1, 0x198   )
	ALPG_COMMAND( "B<B-BD27"    , ALPG_NB_REG   , 1, 0x1A8   )
	ALPG_COMMAND( "B<B-BD28"    , ALPG_NB_REG   , 1, 0x1B8   )
	ALPG_COMMAND( "B<B-BD29"    , ALPG_NB_REG   , 1, 0x1C8   )
	ALPG_COMMAND( "B<B-BD30"    , ALPG_NB_REG   , 1, 0x1D8   )
	ALPG_COMMAND( "B<B-BD31"    , ALPG_NB_REG   , 1, 0x1E8   )
	ALPG_COMMAND( "B<B-BD32"    , ALPG_NB_REG   , 1, 0x1F8   )

//D3/D4 Register
	ALPG_COMMAND( "D3<D3"       , ALPG_D3D4_REG , 0, 0x0    )
	ALPG_COMMAND( "D3<D3*2"     , ALPG_D3D4_REG , 0, 0x1    )
	ALPG_COMMAND( "D3<D3/2"     , ALPG_D3D4_REG , 0, 0x2    )
	ALPG_COMMAND( "D3<D3B"      , ALPG_D3D4_REG , 0, 0x3    )
//	ALPG_COMMAND( "D3<D3*2L"    , ALPG_D3D4_REG , 0, 0x4    )
	ALPG_COMMAND( "D3<D3+1"     , ALPG_D3D4_REG , 0, 0x5    )
	ALPG_COMMAND( "D3<D3-1"     , ALPG_D3D4_REG , 0, 0x6    )
	ALPG_COMMAND( "D3<0"        , ALPG_D3D4_REG , 0, 0x7    )

	ALPG_COMMAND( "D4<D4"       , ALPG_D3D4_REG , 1, 0x0    )
	ALPG_COMMAND( "D4<D4*2"     , ALPG_D3D4_REG , 1, 0x1    )
	ALPG_COMMAND( "D4<D4/2"     , ALPG_D3D4_REG , 1, 0x2    )
	ALPG_COMMAND( "D4<D4B"      , ALPG_D3D4_REG , 1, 0x3    )
//	ALPG_COMMAND( "D4<D4*2L"    , ALPG_D3D4_REG , 1, 0x4    )
//	ALPG_COMMAND( "D4<D4+1"     , ALPG_D3D4_REG , 1, 0x5    )
//	ALPG_COMMAND( "D4<D4-1"     , ALPG_D3D4_REG , 1, 0x6    )
	ALPG_COMMAND( "D4<0"        , ALPG_D3D4_REG , 1, 0x7    )

//SOURCE ADDRESS
//2023.06.13 - kwmoon(comment fatric)
//	ALPG_COMMAND( "X<XB"        , ALPG_ADDR_SRC , 0, 0x0    )	//X OUT   X<
//	ALPG_COMMAND( "X<XC"        , ALPG_ADDR_SRC , 0, 0x1    )
//	ALPG_COMMAND( "X<XS"        , ALPG_ADDR_SRC , 0, 0x2    )
//	ALPG_COMMAND( "X<XK"        , ALPG_ADDR_SRC , 0, 0x3    )
//	ALPG_COMMAND( "X<YB"        , ALPG_ADDR_SRC , 0, 0x4    )
//	ALPG_COMMAND( "X<YC"        , ALPG_ADDR_SRC , 0, 0x5    )
//	ALPG_COMMAND( "X<YS"        , ALPG_ADDR_SRC , 0, 0x6    )
//	ALPG_COMMAND( "X<YK"        , ALPG_ADDR_SRC , 0, 0x7    )
//	ALPG_COMMAND( "X<XB'Z"      , ALPG_ADDR_SRC , 0, 0x8    )
//	ALPG_COMMAND( "X<XC'Z"      , ALPG_ADDR_SRC , 0, 0x9    )
//	ALPG_COMMAND( "X<XS'Z"      , ALPG_ADDR_SRC , 0, 0xa    )
//	ALPG_COMMAND( "X<XK'Z"      , ALPG_ADDR_SRC , 0, 0xb    )
//	ALPG_COMMAND( "X<Z"         , ALPG_ADDR_SRC , 0, 0xc    )
//	ALPG_COMMAND( "X<RF"        , ALPG_ADDR_SRC , 0, 0xd    )
//2023.06.13 - kwmoon(add fatric)
	ALPG_COMMAND( "X<XB"        , ALPG_ADDR_SRC , 0, 0x00   )	//X OUT   X<
	ALPG_COMMAND( "X<XC"        , ALPG_ADDR_SRC , 0, 0x01   )
	ALPG_COMMAND( "X<XS"        , ALPG_ADDR_SRC , 0, 0x02   )
	ALPG_COMMAND( "X<XK"        , ALPG_ADDR_SRC , 0, 0x03   )
	ALPG_COMMAND( "X<XA"        , ALPG_ADDR_SRC , 0, 0x04   )
	ALPG_COMMAND( "X<XD"        , ALPG_ADDR_SRC , 0, 0x05   )
	ALPG_COMMAND( "X<XE"        , ALPG_ADDR_SRC , 0, 0x06   )
	ALPG_COMMAND( "X<XF"        , ALPG_ADDR_SRC , 0, 0x07   )
	ALPG_COMMAND( "X<YB"        , ALPG_ADDR_SRC , 0, 0x08   )
	ALPG_COMMAND( "X<YC"        , ALPG_ADDR_SRC , 0, 0x09   )
	ALPG_COMMAND( "X<YS"        , ALPG_ADDR_SRC , 0, 0x0A   )
	ALPG_COMMAND( "X<YK"        , ALPG_ADDR_SRC , 0, 0x0B   )
	ALPG_COMMAND( "X<YA"        , ALPG_ADDR_SRC , 0, 0x0C   )
	ALPG_COMMAND( "X<YD"        , ALPG_ADDR_SRC , 0, 0x0D   )
	ALPG_COMMAND( "X<YE"        , ALPG_ADDR_SRC , 0, 0x0E   )
	ALPG_COMMAND( "X<YF"        , ALPG_ADDR_SRC , 0, 0x0F   )
	ALPG_COMMAND( "X<XB'Z"      , ALPG_ADDR_SRC , 0, 0x10   )
	ALPG_COMMAND( "X<XC'Z"      , ALPG_ADDR_SRC , 0, 0x11   )
	ALPG_COMMAND( "X<XS'Z"      , ALPG_ADDR_SRC , 0, 0x12   )
	ALPG_COMMAND( "X<XK'Z"      , ALPG_ADDR_SRC , 0, 0x13   )
	ALPG_COMMAND( "X<Z"         , ALPG_ADDR_SRC , 0, 0x14   )
	ALPG_COMMAND( "X<RF"        , ALPG_ADDR_SRC , 0, 0x15   )

//	ALPG_COMMAND( "Y<YB"        , ALPG_ADDR_SRC , 1, 0x0    )	//Y OUT  Y<
//	ALPG_COMMAND( "Y<YC"        , ALPG_ADDR_SRC , 1, 0x1    )
//	ALPG_COMMAND( "Y<YS"        , ALPG_ADDR_SRC , 1, 0x2    )
//	ALPG_COMMAND( "Y<YK"        , ALPG_ADDR_SRC , 1, 0x3    )
//	ALPG_COMMAND( "Y<XB"        , ALPG_ADDR_SRC , 1, 0x4    )
//	ALPG_COMMAND( "Y<XC"        , ALPG_ADDR_SRC , 1, 0x5    )
//	ALPG_COMMAND( "Y<XS"        , ALPG_ADDR_SRC , 1, 0x6    )
//	ALPG_COMMAND( "Y<XK"        , ALPG_ADDR_SRC , 1, 0x7    )
//	ALPG_COMMAND( "Y<YB'Z"      , ALPG_ADDR_SRC , 1, 0x8    )
//	ALPG_COMMAND( "Y<YC'Z"      , ALPG_ADDR_SRC , 1, 0x9    )
//	ALPG_COMMAND( "Y<YS'Z"      , ALPG_ADDR_SRC , 1, 0xa    )
//	ALPG_COMMAND( "Y<YK'Z"      , ALPG_ADDR_SRC , 1, 0xb    )
//	ALPG_COMMAND( "Y<Z"         , ALPG_ADDR_SRC , 1, 0xc    )
	ALPG_COMMAND( "Y<YB"        , ALPG_ADDR_SRC , 1, 0x00   )	//Y OUT  Y<
	ALPG_COMMAND( "Y<YC"        , ALPG_ADDR_SRC , 1, 0x01   )
	ALPG_COMMAND( "Y<YS"        , ALPG_ADDR_SRC , 1, 0x02   )
	ALPG_COMMAND( "Y<YK"        , ALPG_ADDR_SRC , 1, 0x03   )
	ALPG_COMMAND( "Y<YA"        , ALPG_ADDR_SRC , 1, 0x04   )
	ALPG_COMMAND( "Y<YD"        , ALPG_ADDR_SRC , 1, 0x05   )
	ALPG_COMMAND( "Y<YE"        , ALPG_ADDR_SRC , 1, 0x06   )
	ALPG_COMMAND( "Y<YF"        , ALPG_ADDR_SRC , 1, 0x07   )
	ALPG_COMMAND( "Y<XB"        , ALPG_ADDR_SRC , 1, 0x08   )
	ALPG_COMMAND( "Y<XC"        , ALPG_ADDR_SRC , 1, 0x09   )
	ALPG_COMMAND( "Y<XS"        , ALPG_ADDR_SRC , 1, 0x0A   )
	ALPG_COMMAND( "Y<XK"        , ALPG_ADDR_SRC , 1, 0x0B   )
	ALPG_COMMAND( "Y<XA"        , ALPG_ADDR_SRC , 1, 0x0C   )
	ALPG_COMMAND( "Y<XD"        , ALPG_ADDR_SRC , 1, 0x0D   )
	ALPG_COMMAND( "Y<XE"        , ALPG_ADDR_SRC , 1, 0x0E   )
	ALPG_COMMAND( "Y<XF"        , ALPG_ADDR_SRC , 1, 0x0F   )
	ALPG_COMMAND( "Y<YB'Z"      , ALPG_ADDR_SRC , 1, 0x10   )
	ALPG_COMMAND( "Y<YC'Z"      , ALPG_ADDR_SRC , 1, 0x11   )
	ALPG_COMMAND( "Y<YS'Z"      , ALPG_ADDR_SRC , 1, 0x12   )
	ALPG_COMMAND( "Y<YK'Z"      , ALPG_ADDR_SRC , 1, 0x13   )
	ALPG_COMMAND( "Y<Z"         , ALPG_ADDR_SRC , 1, 0x14   )


	ALPG_COMMAND( "/X"          , ALPG_ADDR_SRC , 2, 0x1    )	// /X
	ALPG_COMMAND( "/Y"          , ALPG_ADDR_SRC , 3, 0x1    )	// /Y
	ALPG_COMMAND( "/Z"          , ALPG_ADDR_SRC , 4, 0x1    )	// /Z

//	DSET에서 XT, YT 설정문과 별도 처리(주의)
//	case ALPG_ADDR_SRC: 에서 DSET과 (XT,YT) 둘다 처리함
	ALPG_COMMAND( "XT"          , ALPG_ADDR_SRC , 5, 0x1    )	//XT
	ALPG_COMMAND( "YT"          , ALPG_ADDR_SRC , 6, 0x1    )	//YT
	ALPG_COMMAND( "LMAX<>HMAX"  , ALPG_ADDR_SRC , 7, 0x1    )	//SWAP
	ALPG_COMMAND( "RF<RF+1"     , ALPG_ADDR_SRC , 8, 0x1    )	//RF

	ALPG_COMMAND( "C0"           , ALPG_MUT      , 0, 0      )	//MUT
	ALPG_COMMAND( "C1"           , ALPG_MUT      , 0, 1      )
	ALPG_COMMAND( "C2"           , ALPG_MUT      , 0, 2      )
	ALPG_COMMAND( "C3"           , ALPG_MUT      , 0, 3      )
	ALPG_COMMAND( "C4"           , ALPG_MUT      , 0, 4      )
	ALPG_COMMAND( "C5"           , ALPG_MUT      , 0, 5      )
	ALPG_COMMAND( "C6"           , ALPG_MUT      , 0, 6      )
	ALPG_COMMAND( "C7"           , ALPG_MUT      , 0, 7      )
	ALPG_COMMAND( "C8"           , ALPG_MUT      , 0, 8      )
	ALPG_COMMAND( "C9"           , ALPG_MUT      , 0, 9      )
	ALPG_COMMAND( "C10"          , ALPG_MUT      , 0, 10     )
	ALPG_COMMAND( "C11"          , ALPG_MUT      , 0, 11     )
	ALPG_COMMAND( "C12"          , ALPG_MUT      , 0, 12     )
	ALPG_COMMAND( "C13"          , ALPG_MUT      , 0, 13     )
	ALPG_COMMAND( "C14"          , ALPG_MUT      , 0, 14     )
	ALPG_COMMAND( "C15"          , ALPG_MUT      , 0, 15     )
	ALPG_COMMAND( "C16"          , ALPG_MUT      , 0, 16     )
	ALPG_COMMAND( "C17"          , ALPG_MUT      , 0, 17     )
	ALPG_COMMAND( "C18"          , ALPG_MUT      , 0, 18     )
	ALPG_COMMAND( "C19"          , ALPG_MUT      , 0, 19     )
	ALPG_COMMAND( "C20"          , ALPG_MUT      , 0, 20     )
	ALPG_COMMAND( "C21"          , ALPG_MUT      , 0, 21     )
	ALPG_COMMAND( "C22"          , ALPG_MUT      , 0, 22     )
	ALPG_COMMAND( "C23"          , ALPG_MUT      , 0, 23     )
	ALPG_COMMAND( "C24"          , ALPG_MUT      , 0, 24     )
	ALPG_COMMAND( "C25"          , ALPG_MUT      , 0, 25     )
	ALPG_COMMAND( "C26"          , ALPG_MUT      , 0, 26     )
	ALPG_COMMAND( "C27"          , ALPG_MUT      , 0, 27     )
	ALPG_COMMAND( "C28"          , ALPG_MUT      , 0, 28     )
	ALPG_COMMAND( "C29"          , ALPG_MUT      , 0, 29     )
	ALPG_COMMAND( "C30"          , ALPG_MUT      , 0, 30     )
	ALPG_COMMAND( "C31"          , ALPG_MUT      , 0, 31     )
///////////////////////////////////////////////////////////////////////////
//	Append by fatric - 2022.10.31
	ALPG_COMMAND( "C32"          , ALPG_MUT      , 1, 0      )
	ALPG_COMMAND( "C33"          , ALPG_MUT      , 1, 1      )
	//ALPG_COMMAND( "W"            , ALPG_MUT      , 1, 0      )
	//ALPG_COMMAND( "R"            , ALPG_MUT      , 1, 1      )
	//ALPG_COMMAND( "M1"           , ALPG_MUT      , 1, 2      )
	//ALPG_COMMAND( "M2"           , ALPG_MUT      , 1, 3      )
	//ALPG_COMMAND( "SRC"          , ALPG_MUT      , 1, 4      )	//2022.10.24 - KWMOON(UBM TP SEL)
	ALPG_COMMAND( "SRC"          , ALPG_MUT      , 1, 8      )	//2022.11.17 - fatric(UBM TP SEL)
	ALPG_COMMAND( "C41"          , ALPG_MUT      , 1, 9      )	//2022.11.17 - fatric(PE READ Enable)

	ALPG_COMMAND("FIXH"          , ALPG_MUT		 , 3, 24     )
	ALPG_COMMAND("FIXL"			 , ALPG_MUT		 , 3, 25     )

//SCAN ADDRESS
	ALPG_COMMAND( "S<SA"           , ALPG_SCAN_ADDR, 0x01, 0x0000 )
	ALPG_COMMAND( "S<SB"           , ALPG_SCAN_ADDR, 0x01, 0x0001 )

	ALPG_COMMAND( "SA<SA"          , ALPG_SCAN_ADDR, 0x00, 0x0000 )
	ALPG_COMMAND( "SB<SB"          , ALPG_SCAN_ADDR, 0x00, 0x0000 )
	ALPG_COMMAND( "SA<SB"          , ALPG_SCAN_ADDR, 0x00, 0x0002 )
	ALPG_COMMAND( "SB<SA"          , ALPG_SCAN_ADDR, 0x00, 0x0004 )
	ALPG_COMMAND( "SB<>SA"         , ALPG_SCAN_ADDR, 0x00, 0x0008 )

	//SA
	//	SA	F<A
//	ALPG_COMMAND( "SA<SA"          , ALPG_SCAN_ADDR, 0x00, 0x0001 )
//	ALPG_COMMAND( "SA<SB"          , ALPG_SCAN_ADDR, 0x00, 0x0101 )

	//	SA	F<A+1
	ALPG_COMMAND( "SA<SA+1"        , ALPG_SCAN_ADDR, 0x00, 0x0011 )
	ALPG_COMMAND( "SA<SB+1"        , ALPG_SCAN_ADDR, 0x00, 0x0111 )

	//	SA	F<A-1
	ALPG_COMMAND( "SA<SA-1"        , ALPG_SCAN_ADDR, 0x00, 0x0021 )
	ALPG_COMMAND( "SA<SB-1"        , ALPG_SCAN_ADDR, 0x00, 0x0121 )

	//	SA	F<B
	ALPG_COMMAND( "SA<S1A"          , ALPG_SCAN_ADDR, 0x00, 0x0031 )
	ALPG_COMMAND( "SA<S_TEMP"       , ALPG_SCAN_ADDR, 0x00, 0x1031 )

	//	SA	F<A+B
	ALPG_COMMAND( "SA<SA+S1A"       , ALPG_SCAN_ADDR, 0x00, 0x0041 )
	ALPG_COMMAND( "SA<SA+S_TEMP"    , ALPG_SCAN_ADDR, 0x00, 0x1041 )
	ALPG_COMMAND( "SA<SB+S1A"       , ALPG_SCAN_ADDR, 0x00, 0x0141 )
	ALPG_COMMAND( "SA<SB+S_TEMP"    , ALPG_SCAN_ADDR, 0x00, 0x1141 )

	//	SA	F<A-B
	ALPG_COMMAND( "SA<SA-S1A"       , ALPG_SCAN_ADDR, 0x00, 0x0051 )
	ALPG_COMMAND( "SA<SA-S_TEMP"    , ALPG_SCAN_ADDR, 0x00, 0x1051 )
	ALPG_COMMAND( "SA<SB-S1A"       , ALPG_SCAN_ADDR, 0x00, 0x0151 )
	ALPG_COMMAND( "SA<SB-S_TEMP"    , ALPG_SCAN_ADDR, 0x00, 0x1151 )

	//	SA	F<0
	ALPG_COMMAND( "SA<0"            , ALPG_SCAN_ADDR, 0x00, 0x0061 )

	//SB
	//	SB	F<A
//	ALPG_COMMAND( "SB<SA"          , ALPG_SCAN_ADDR, 0x00, 0x0003 )
//	ALPG_COMMAND( "SB<SB"          , ALPG_SCAN_ADDR, 0x00, 0x0103 )

	//	SB	F<A+1
	ALPG_COMMAND( "SB<SA+1"        , ALPG_SCAN_ADDR, 0x00, 0x0013 )
	ALPG_COMMAND( "SB<SB+1"        , ALPG_SCAN_ADDR, 0x00, 0x0113 )

	//	SB	F<A-1
	ALPG_COMMAND( "SB<SA-1"        , ALPG_SCAN_ADDR, 0x00, 0x0023 )
	ALPG_COMMAND( "SB<SB-1"        , ALPG_SCAN_ADDR, 0x00, 0x0123 )

	//	SB	F<B
	ALPG_COMMAND( "SB<S1A"          , ALPG_SCAN_ADDR, 0x00, 0x0033 )
	ALPG_COMMAND( "SB<S_TEMP"       , ALPG_SCAN_ADDR, 0x00, 0x1033 )

	//	SB	F<A+B
	ALPG_COMMAND( "SB<SA+S1A"       , ALPG_SCAN_ADDR, 0x00, 0x0043 )
	ALPG_COMMAND( "SB<SA+S_TEMP"    , ALPG_SCAN_ADDR, 0x00, 0x1043 )
	ALPG_COMMAND( "SB<SB+S1A"       , ALPG_SCAN_ADDR, 0x00, 0x0143 )
	ALPG_COMMAND( "SB<SB+S_TEMP"    , ALPG_SCAN_ADDR, 0x00, 0x1143 )

	//	SB	F<A-B
	ALPG_COMMAND( "SB<SA-S1A"       , ALPG_SCAN_ADDR, 0x00, 0x0053 )
	ALPG_COMMAND( "SB<SA-S_TEMP"    , ALPG_SCAN_ADDR, 0x00, 0x1053 )
	ALPG_COMMAND( "SB<SB-S1A"       , ALPG_SCAN_ADDR, 0x00, 0x0153 )
	ALPG_COMMAND( "SB<SB-S_TEMP"    , ALPG_SCAN_ADDR, 0x00, 0x1153 )

	//	SB	F<0
	ALPG_COMMAND( "SB<0"            , ALPG_SCAN_ADDR, 0x00, 0x0063 )

//VECTOR ADDRESS
	ALPG_COMMAND( "V<VA"           , ALPG_VECTOR_ADDR, 0x01, 0x0000 )
	ALPG_COMMAND( "V<VB"           , ALPG_VECTOR_ADDR, 0x01, 0x0001 )

	ALPG_COMMAND( "VA<VA"          , ALPG_VECTOR_ADDR, 0x00, 0x0000 )
	ALPG_COMMAND( "VB<VB"          , ALPG_VECTOR_ADDR, 0x00, 0x0000 )
	ALPG_COMMAND( "VA<VB"          , ALPG_VECTOR_ADDR, 0x00, 0x0002 )
	ALPG_COMMAND( "VB<VA"          , ALPG_VECTOR_ADDR, 0x00, 0x0004 )
	ALPG_COMMAND( "VB<>VA"         , ALPG_VECTOR_ADDR, 0x00, 0x0008 )

	//VA
	//	VA	F<A
//	ALPG_COMMAND( "VA<VA"          , ALPG_VECTOR_ADDR, 0x00, 0x0001 )
//	ALPG_COMMAND( "VA<VB"          , ALPG_VECTOR_ADDR, 0x00, 0x0101 )

	//	VA	F<A+1
	ALPG_COMMAND( "VA<VA+1"        , ALPG_VECTOR_ADDR, 0x00, 0x0011 )
	ALPG_COMMAND( "VA<VB+1"        , ALPG_VECTOR_ADDR, 0x00, 0x0111 )

	//	VA	F<A-1
	ALPG_COMMAND( "VA<VA-1"        , ALPG_VECTOR_ADDR, 0x00, 0x0021 )
	ALPG_COMMAND( "VA<VB-1"        , ALPG_VECTOR_ADDR, 0x00, 0x0121 )

	//	VA	F<B
	ALPG_COMMAND( "VA<V1A"          , ALPG_VECTOR_ADDR, 0x00, 0x0031 )
	ALPG_COMMAND( "VA<V_TEMP"       , ALPG_VECTOR_ADDR, 0x00, 0x1031 )

	//	VA	F<A+B
	ALPG_COMMAND( "VA<VA+V1A"       , ALPG_VECTOR_ADDR, 0x00, 0x0041 )
	ALPG_COMMAND( "VA<VA+V_TEMP"    , ALPG_VECTOR_ADDR, 0x00, 0x1041 )
	ALPG_COMMAND( "VA<VB+V1A"       , ALPG_VECTOR_ADDR, 0x00, 0x0141 )
	ALPG_COMMAND( "VA<VB+V_TEMP"    , ALPG_VECTOR_ADDR, 0x00, 0x1141 )

	//	VA	F<A-B
	ALPG_COMMAND( "VA<VA-V1A"       , ALPG_VECTOR_ADDR, 0x00, 0x0051 )
	ALPG_COMMAND( "VA<VA-V_TEMP"    , ALPG_VECTOR_ADDR, 0x00, 0x1051 )
	ALPG_COMMAND( "VA<VB-V1A"       , ALPG_VECTOR_ADDR, 0x00, 0x0151 )
	ALPG_COMMAND( "VA<VB-V_TEMP"    , ALPG_VECTOR_ADDR, 0x00, 0x1151 )

	//	VA	F<0
	ALPG_COMMAND( "VA<0"            , ALPG_VECTOR_ADDR, 0x00, 0x0061 )

	//VB
	//	VB	F<A
//	ALPG_COMMAND( "VB<VA"          , ALPG_VECTOR_ADDR, 0x00, 0x0003 )
//	ALPG_COMMAND( "VB<VB"          , ALPG_VECTOR_ADDR, 0x00, 0x0103 )

	//	VB	F<A+1
	ALPG_COMMAND( "VB<VA+1"        , ALPG_VECTOR_ADDR, 0x00, 0x0013 )
	ALPG_COMMAND( "VB<VB+1"        , ALPG_VECTOR_ADDR, 0x00, 0x0113 )

	//	VB	F<A-1
	ALPG_COMMAND( "VB<VA-1"        , ALPG_VECTOR_ADDR, 0x00, 0x0023 )
	ALPG_COMMAND( "VB<VB-1"        , ALPG_VECTOR_ADDR, 0x00, 0x0123 )

	//	VB	F<B
	ALPG_COMMAND( "VB<V1A"          , ALPG_VECTOR_ADDR, 0x00, 0x0033 )
	ALPG_COMMAND( "VB<V_TEMP"       , ALPG_VECTOR_ADDR, 0x00, 0x1033 )

	//	VB	F<A+B
	ALPG_COMMAND( "VB<VA+V1A"       , ALPG_VECTOR_ADDR, 0x00, 0x0043 )
	ALPG_COMMAND( "VB<VA+V_TEMP"    , ALPG_VECTOR_ADDR, 0x00, 0x1043 )
	ALPG_COMMAND( "VB<VB+V1A"       , ALPG_VECTOR_ADDR, 0x00, 0x0143 )
	ALPG_COMMAND( "VB<VB+V_TEMP"    , ALPG_VECTOR_ADDR, 0x00, 0x1143 )

	//	VB	F<A-B
	ALPG_COMMAND( "VB<VA-V1A"       , ALPG_VECTOR_ADDR, 0x00, 0x0053 )
	ALPG_COMMAND( "VB<VA-V_TEMP"    , ALPG_VECTOR_ADDR, 0x00, 0x1053 )
	ALPG_COMMAND( "VB<VB-V1A"       , ALPG_VECTOR_ADDR, 0x00, 0x0153 )
	ALPG_COMMAND( "VB<VB-V_TEMP"    , ALPG_VECTOR_ADDR, 0x00, 0x1153 )

	//	VB	F<0
	ALPG_COMMAND( "VB<0"            , ALPG_VECTOR_ADDR, 0x00, 0x0063 )

	ALPG_COMMAND("TP<TP"         , ALPG_TP       , 0, 0x00   )	//HOLD
//	ALPG_COMMAND("TP<TP"         , ALPG_TP       , 0, 0x01   )	//DSET
	ALPG_COMMAND("TP<TPH"        , ALPG_TP       , 0, 0x02   )
	ALPG_COMMAND("TP<TPH1"       , ALPG_TP       , 0, 0x02   )
	ALPG_COMMAND("TP<TP*2"       , ALPG_TP       , 0, 0x03   )
	ALPG_COMMAND("TP<TP+1"       , ALPG_TP       , 0, 0x04   )
	ALPG_COMMAND("TP<TP-1"       , ALPG_TP       , 0, 0x05   )
	ALPG_COMMAND("TP<0"          , ALPG_TP       , 0, 0x06   )
	ALPG_COMMAND("TP</TP"        , ALPG_TP       , 0, 0x07   )
	ALPG_COMMAND("TP<D5"         , ALPG_TP       , 0, 0x08   )
	ALPG_COMMAND("TP<TP'D5"      , ALPG_TP       , 0, 0x09   )
	ALPG_COMMAND("TP<TP&D5"      , ALPG_TP       , 0, 0x0A   )
	ALPG_COMMAND("TP<TP\"D5"     , ALPG_TP       , 0, 0x0B   )
	ALPG_COMMAND("TP<TP+D5"      , ALPG_TP       , 0, 0x0C   )
	ALPG_COMMAND("TP<TP-D5"      , ALPG_TP       , 0, 0x0D   )
	ALPG_COMMAND("TP</D5"        , ALPG_TP       , 0, 0x0E   )
//	ALPG_COMMAND("TPS<TP"        , ALPG_TP       , 0, 0x0F   )
//	ALPG_COMMAND("TP<TPS"        , ALPG_TP       , 0, 0x10   )
//	ALPG_COMMAND("TP<>TPS"       , ALPG_TP       , 0, 0x11   )
///////////////////////////////////////////////////////////////////////////
	ALPG_COMMAND("TP<TPH1A"      , ALPG_TP       , 0, 0x0F   )
	ALPG_COMMAND("TP<TPH1B"      , ALPG_TP       , 0, 0x10   )
	ALPG_COMMAND("TP<TPH1C"      , ALPG_TP       , 0, 0x11   )
	ALPG_COMMAND("TP<TPH1D"      , ALPG_TP       , 0, 0x12   )
///////////////////////////////////////////////////////////////////////////
//2023.06.13 - kwmoon(add fatric)
	ALPG_COMMAND("TP<TP2"        , ALPG_TP       , 0, 0x14   )	//Append for HOT
	ALPG_COMMAND("TP<TPH2"       , ALPG_TP       , 0, 0x15   )	//Append for HOT
	ALPG_COMMAND("TP<TPH2A"      , ALPG_TP       , 0, 0x16   )	//Append for HOT
	ALPG_COMMAND("TP<TPH2B"      , ALPG_TP       , 0, 0x17   )	//Append for HOT
	ALPG_COMMAND("TP<TPH2C"      , ALPG_TP       , 0, 0x18   )	//Append for HOT
	ALPG_COMMAND("TP<TPH2D"      , ALPG_TP       , 0, 0x19   )	//Append for HOT

	ALPG_COMMAND("TP1<TP1"       , ALPG_TP       , 0, 0x00   )	//HOLD
//	ALPG_COMMAND("TP1<TP1"       , ALPG_TP       , 0, 0x01   )	//DSET
	ALPG_COMMAND("TP1<TPH1"      , ALPG_TP       , 0, 0x02   )
	ALPG_COMMAND("TP1<TPH"       , ALPG_TP       , 0, 0x02   )
	ALPG_COMMAND("TP1<TP1*2"     , ALPG_TP       , 0, 0x03   )
	ALPG_COMMAND("TP1<TP1+1"     , ALPG_TP       , 0, 0x04   )
	ALPG_COMMAND("TP1<TP1-1"     , ALPG_TP       , 0, 0x05   )
	ALPG_COMMAND("TP1<0"         , ALPG_TP       , 0, 0x06   )
	ALPG_COMMAND("TP1</TP1"      , ALPG_TP       , 0, 0x07   )
	ALPG_COMMAND("TP1<D5"        , ALPG_TP       , 0, 0x08   )
	ALPG_COMMAND("TP1<TP1'D5"    , ALPG_TP       , 0, 0x09   )
	ALPG_COMMAND("TP1<TP1&D5"    , ALPG_TP       , 0, 0x0A   )
	ALPG_COMMAND("TP1<TP1\"D5"   , ALPG_TP       , 0, 0x0B   )
	ALPG_COMMAND("TP1<TP1+D5"    , ALPG_TP       , 0, 0x0C   )
	ALPG_COMMAND("TP1<TP1-D5"    , ALPG_TP       , 0, 0x0D   )
	ALPG_COMMAND("TP1</D5"       , ALPG_TP       , 0, 0x0E   )
//	ALPG_COMMAND("TPS1<TP1"      , ALPG_TP       , 0, 0x0F   )
//	ALPG_COMMAND("TP1<TPS1"      , ALPG_TP       , 0, 0x10   )
//	ALPG_COMMAND("TP1<>TPS1"     , ALPG_TP       , 0, 0x11   )
///////////////////////////////////////////////////////////////////////////
	ALPG_COMMAND("TP1<TPH1A"     , ALPG_TP       , 0, 0x0F   )
	ALPG_COMMAND("TP1<TPH1B"     , ALPG_TP       , 0, 0x10   )
	ALPG_COMMAND("TP1<TPH1C"     , ALPG_TP       , 0, 0x11   )
	ALPG_COMMAND("TP1<TPH1D"     , ALPG_TP       , 0, 0x12   )
	ALPG_COMMAND("TPH<TP"        , ALPG_TP       , 0, 0x13   )
	ALPG_COMMAND("TPH<TP1"       , ALPG_TP       , 0, 0x13   )
///////////////////////////////////////////////////////////////////////////
//2023.06.13 - kwmoon(add fatric)
	ALPG_COMMAND("TP1<TP2"       , ALPG_TP       , 0, 0x14   )	//Append for HOT
	ALPG_COMMAND("TP1<TPH2"      , ALPG_TP       , 0, 0x15   )	//Append for HOT
	ALPG_COMMAND("TP1<TPH2A"     , ALPG_TP       , 0, 0x16   )	//Append for HOT
	ALPG_COMMAND("TP1<TPH2B"     , ALPG_TP       , 0, 0x17   )	//Append for HOT
	ALPG_COMMAND("TP1<TPH2C"     , ALPG_TP       , 0, 0x18   )	//Append for HOT
	ALPG_COMMAND("TP1<TPH2D"     , ALPG_TP       , 0, 0x19   )	//Append for HOT


	ALPG_COMMAND("TP2<TP2"       , ALPG_TP       , 1, 0x00   )	//HOLD
//	ALPG_COMMAND("TP2<TP2"       , ALPG_TP       , 1, 0x01   )	//DSET
	ALPG_COMMAND("TP2<TPH2"      , ALPG_TP       , 1, 0x02   )
	ALPG_COMMAND("TP2<TP2*2"     , ALPG_TP       , 1, 0x03   )
	ALPG_COMMAND("TP2<TP2+1"     , ALPG_TP       , 1, 0x04   )
	ALPG_COMMAND("TP2<TP2-1"     , ALPG_TP       , 1, 0x05   )
	ALPG_COMMAND("TP2<0"         , ALPG_TP       , 1, 0x06   )
	ALPG_COMMAND("TP2</TP2"      , ALPG_TP       , 1, 0x07   )
	ALPG_COMMAND("TP2<D6"        , ALPG_TP       , 1, 0x08   )
	ALPG_COMMAND("TP2<TP2'D6"    , ALPG_TP       , 1, 0x09   )
	ALPG_COMMAND("TP2<TP2&D6"    , ALPG_TP       , 1, 0x0A   )
	ALPG_COMMAND("TP2<TP2\"D6"   , ALPG_TP       , 1, 0x0B   )
	ALPG_COMMAND("TP2<TP2+D6"    , ALPG_TP       , 1, 0x0C   )
	ALPG_COMMAND("TP2<TP2-D6"    , ALPG_TP       , 1, 0x0D   )
	ALPG_COMMAND("TP2</D6"       , ALPG_TP       , 1, 0x0E   )
//	ALPG_COMMAND("TPS2<TP2"      , ALPG_TP       , 1, 0x0F   )
//	ALPG_COMMAND("TP2<TPS2"      , ALPG_TP       , 1, 0x10   )
//	ALPG_COMMAND("TP2<>TPS2"     , ALPG_TP       , 1, 0x11   )
///////////////////////////////////////////////////////////////////////////
	ALPG_COMMAND("TP2<TPH2A"     , ALPG_TP       , 1, 0x0F   )
	ALPG_COMMAND("TP2<TPH2B"     , ALPG_TP       , 1, 0x10   )
	ALPG_COMMAND("TP2<TPH2C"     , ALPG_TP       , 1, 0x11   )
	ALPG_COMMAND("TP2<TPH2D"     , ALPG_TP       , 1, 0x12   )
	ALPG_COMMAND("TPH2<TP2"      , ALPG_TP       , 1, 0x13   )
///////////////////////////////////////////////////////////////////////////
//2023.06.13 - kwmoon(add fatric)
	ALPG_COMMAND("TP2<TP"        , ALPG_TP       , 1, 0x14   )	//Append for HOT
	ALPG_COMMAND("TP2<TP1"       , ALPG_TP       , 1, 0x14   )	//Append for HOT
	ALPG_COMMAND("TP2<TPH1"      , ALPG_TP       , 1, 0x15   )	//Append for HOT
	ALPG_COMMAND("TP2<TPH1A"     , ALPG_TP       , 1, 0x16   )	//Append for HOT
	ALPG_COMMAND("TP2<TPH1B"     , ALPG_TP       , 1, 0x17   )	//Append for HOT
	ALPG_COMMAND("TP2<TPH1C"     , ALPG_TP       , 1, 0x18   )	//Append for HOT
	ALPG_COMMAND("TP2<TPH1D"     , ALPG_TP       , 1, 0x19   )	//Append for HOT

//	Inversion, Hold, Sourced Data
	ALPG_COMMAND("/D"            , ALPG_D        , 0, 0x1    )
	ALPG_COMMAND("/D2"           , ALPG_D        , 1, 0x1    )
	ALPG_COMMAND("/D2A"          , ALPG_D        , 1, 0x1    )	// replace "D2" -> "D2A"
	ALPG_COMMAND("D<TP"          , ALPG_D        , 2, 0x0    )
	ALPG_COMMAND("D<TP1"         , ALPG_D        , 2, 0x0    )
	ALPG_COMMAND("D<TP2"         , ALPG_D        , 2, 0x1    )
	ALPG_COMMAND("D<TPXOR"       , ALPG_D        , 2, 0x2    )
	ALPG_COMMAND("PD"            , ALPG_D        , 3, 0x1    )

	ALPG_COMMAND("DBMAP<DBMAP"      , ALPG_DBMAP    , 0, 0x00   )	//HOLD
	ALPG_COMMAND("DBMAP<DBMAP/2"    , ALPG_DBMAP    , 0, 0x01   )
	ALPG_COMMAND("DBMAP<DBMAP+1"    , ALPG_DBMAP    , 0, 0x02   )
	ALPG_COMMAND("DBMAP<DBMAP-1"    , ALPG_DBMAP    , 0, 0x03   )
	ALPG_COMMAND("DBMAP<0"          , ALPG_DBMAP    , 0, 0x04   )
	ALPG_COMMAND("DBMAP<DBMAR"      , ALPG_DBMAP    , 0, 0x05   )
	ALPG_COMMAND("DBMAP<DBMAP+DBMAR", ALPG_DBMAP    , 0, 0x06   )
	ALPG_COMMAND("DBMAP<DBMAP-DBMAR", ALPG_DBMAP    , 0, 0x07   )
	ALPG_COMMAND("DBMAP<"           , ALPG_DBMAP    , 1, 0x08   )
	ALPG_COMMAND("DBMAP<DBMAP+"     , ALPG_DBMAP    , 1, 0x09   )
	ALPG_COMMAND("DBMAP<DBMAP-"     , ALPG_DBMAP    , 1, 0x0A   )
/*
	ALPG_COMMAND("CYP1"          , ALPG_CYP      , 0, 0x0    )
	ALPG_COMMAND("CYP2"          , ALPG_CYP      , 0, 0x1    )
	ALPG_COMMAND("CYP3"          , ALPG_CYP      , 0, 0x2    )
	ALPG_COMMAND("CYP4"          , ALPG_CYP      , 0, 0x3    )
	ALPG_COMMAND("CYP5"          , ALPG_CYP      , 0, 0x4    )
	ALPG_COMMAND("CYP6"          , ALPG_CYP      , 0, 0x5    )
	ALPG_COMMAND("CYP7"          , ALPG_CYP      , 0, 0x6    )
	ALPG_COMMAND("CYP8"          , ALPG_CYP      , 0, 0x7    )
	ALPG_COMMAND("CYP9"          , ALPG_CYP      , 0, 0x8    )
	ALPG_COMMAND("CYP10"         , ALPG_CYP      , 0, 0x9    )
	ALPG_COMMAND("CYP11"         , ALPG_CYP      , 0, 0xA    )
	ALPG_COMMAND("CYP12"         , ALPG_CYP      , 0, 0xB    )
	ALPG_COMMAND("CYP13"         , ALPG_CYP      , 0, 0xC    )
	ALPG_COMMAND("CYP14"         , ALPG_CYP      , 0, 0xD    )
	ALPG_COMMAND("CYP15"         , ALPG_CYP      , 0, 0xE    )
	ALPG_COMMAND("CYP16"         , ALPG_CYP      , 0, 0xF    )
*/
	ALPG_COMMAND("CYP0"          , ALPG_CYP      , 0, 0x0    )
	ALPG_COMMAND("CYP1"          , ALPG_CYP      , 0, 0x1    )
	ALPG_COMMAND("CYP2"          , ALPG_CYP      , 0, 0x2    )
	ALPG_COMMAND("CYP3"          , ALPG_CYP      , 0, 0x3    )
	ALPG_COMMAND("CYP4"          , ALPG_CYP      , 0, 0x4    )
	ALPG_COMMAND("CYP5"          , ALPG_CYP      , 0, 0x5    )
	ALPG_COMMAND("CYP6"          , ALPG_CYP      , 0, 0x6    )
	ALPG_COMMAND("CYP7"          , ALPG_CYP      , 0, 0x7    )
	ALPG_COMMAND("CYP8"          , ALPG_CYP      , 0, 0x8    )
	ALPG_COMMAND("CYP9"         , ALPG_CYP       , 0, 0x9    )
	ALPG_COMMAND("CYP10"         , ALPG_CYP      , 0, 0xA    )
	ALPG_COMMAND("CYP11"         , ALPG_CYP      , 0, 0xB    )
	ALPG_COMMAND("CYP12"         , ALPG_CYP      , 0, 0xC    )
	ALPG_COMMAND("CYP13"         , ALPG_CYP      , 0, 0xD    )
	ALPG_COMMAND("CYP14"         , ALPG_CYP      , 0, 0xE    )
	ALPG_COMMAND("CYP15"         , ALPG_CYP      , 0, 0xF    )

//	ALPG_COMMAND("TS0"            , ALPG_TIMESET  , 0, 0x00  )	//Logic 내부사용
	ALPG_COMMAND("TS1"            , ALPG_TIMESET  , 0, 0x01  )
	ALPG_COMMAND("TS2"            , ALPG_TIMESET  , 0, 0x02  )
	ALPG_COMMAND("TS3"            , ALPG_TIMESET  , 0, 0x03  )
	ALPG_COMMAND("TS4"            , ALPG_TIMESET  , 0, 0x04  )
	ALPG_COMMAND("TS5"            , ALPG_TIMESET  , 0, 0x05  )
	ALPG_COMMAND("TS6"            , ALPG_TIMESET  , 0, 0x06  )
	ALPG_COMMAND("TS7"            , ALPG_TIMESET  , 0, 0x07  )
	ALPG_COMMAND("TS8"            , ALPG_TIMESET  , 0, 0x08  )
	ALPG_COMMAND("TS9"            , ALPG_TIMESET  , 0, 0x09  )
	ALPG_COMMAND("TS10"           , ALPG_TIMESET  , 0, 0x0A  )
	ALPG_COMMAND("TS11"           , ALPG_TIMESET  , 0, 0x0B  )
	ALPG_COMMAND("TS12"           , ALPG_TIMESET  , 0, 0x0C  )
	ALPG_COMMAND("TS13"           , ALPG_TIMESET  , 0, 0x0D  )
	ALPG_COMMAND("TS14"           , ALPG_TIMESET  , 0, 0x0E  )
	ALPG_COMMAND("TS15"           , ALPG_TIMESET  , 0, 0x0F  )
	ALPG_COMMAND("TS16"           , ALPG_TIMESET  , 0, 0x10  )	//2017-03-11 Timeset extend
	ALPG_COMMAND("TS17"           , ALPG_TIMESET  , 0, 0x11  )
	ALPG_COMMAND("TS18"           , ALPG_TIMESET  , 0, 0x12  )
	ALPG_COMMAND("TS19"           , ALPG_TIMESET  , 0, 0x13  )
	ALPG_COMMAND("TS20"           , ALPG_TIMESET  , 0, 0x14  )
	ALPG_COMMAND("TS21"           , ALPG_TIMESET  , 0, 0x15  )
	ALPG_COMMAND("TS22"           , ALPG_TIMESET  , 0, 0x16  )
	ALPG_COMMAND("TS23"           , ALPG_TIMESET  , 0, 0x17  )
	ALPG_COMMAND("TS24"           , ALPG_TIMESET  , 0, 0x18  )
	ALPG_COMMAND("TS25"           , ALPG_TIMESET  , 0, 0x19  )
	ALPG_COMMAND("TS26"           , ALPG_TIMESET  , 0, 0x1A  )
	ALPG_COMMAND("TS27"           , ALPG_TIMESET  , 0, 0x1B  )
	ALPG_COMMAND("TS28"           , ALPG_TIMESET  , 0, 0x1C  )
	ALPG_COMMAND("TS29"           , ALPG_TIMESET  , 0, 0x1D  )
	ALPG_COMMAND("TS30"           , ALPG_TIMESET  , 0, 0x1E  )
	ALPG_COMMAND("TS31"           , ALPG_TIMESET  , 0, 0x1F  )


//	ALPG_COMMAND("/TS0"           , ALPG_TIMESET  , 0, 0x00  )	//Logic 내부사용
	ALPG_COMMAND("/T1"            , ALPG_TIMESET  , 0, 0x01  )
	ALPG_COMMAND("/T2"            , ALPG_TIMESET  , 0, 0x02  )
	ALPG_COMMAND("/T3"            , ALPG_TIMESET  , 0, 0x03  )
	ALPG_COMMAND("/T4"            , ALPG_TIMESET  , 0, 0x04  )
	ALPG_COMMAND("/T5"            , ALPG_TIMESET  , 0, 0x05  )
	ALPG_COMMAND("/T6"            , ALPG_TIMESET  , 0, 0x06  )
	ALPG_COMMAND("/T7"            , ALPG_TIMESET  , 0, 0x07  )
	ALPG_COMMAND("/T8"            , ALPG_TIMESET  , 0, 0x08  )
	ALPG_COMMAND("/T9"            , ALPG_TIMESET  , 0, 0x09  )
	ALPG_COMMAND("/T10"           , ALPG_TIMESET  , 0, 0x0A  )
	ALPG_COMMAND("/T11"           , ALPG_TIMESET  , 0, 0x0B  )
	ALPG_COMMAND("/T12"           , ALPG_TIMESET  , 0, 0x0C  )
	ALPG_COMMAND("/T13"           , ALPG_TIMESET  , 0, 0x0D  )
	ALPG_COMMAND("/T14"           , ALPG_TIMESET  , 0, 0x0E  )
	ALPG_COMMAND("/T15"           , ALPG_TIMESET  , 0, 0x0F  )
	ALPG_COMMAND("/T16"           , ALPG_TIMESET  , 0, 0x10  )	//2017-03-11 Timeset extend
	ALPG_COMMAND("/T17"           , ALPG_TIMESET  , 0, 0x11  )
	ALPG_COMMAND("/T18"           , ALPG_TIMESET  , 0, 0x12  )
	ALPG_COMMAND("/T19"           , ALPG_TIMESET  , 0, 0x13  )
	ALPG_COMMAND("/T20"           , ALPG_TIMESET  , 0, 0x14  )
	ALPG_COMMAND("/T21"           , ALPG_TIMESET  , 0, 0x15  )
	ALPG_COMMAND("/T22"           , ALPG_TIMESET  , 0, 0x16  )
	ALPG_COMMAND("/T23"           , ALPG_TIMESET  , 0, 0x17  )
	ALPG_COMMAND("/T24"           , ALPG_TIMESET  , 0, 0x18  )
	ALPG_COMMAND("/T25"           , ALPG_TIMESET  , 0, 0x19  )
	ALPG_COMMAND("/T26"           , ALPG_TIMESET  , 0, 0x1A  )
	ALPG_COMMAND("/T27"           , ALPG_TIMESET  , 0, 0x1B  )
	ALPG_COMMAND("/T28"           , ALPG_TIMESET  , 0, 0x1C  )
	ALPG_COMMAND("/T29"           , ALPG_TIMESET  , 0, 0x1D  )
	ALPG_COMMAND("/T30"           , ALPG_TIMESET  , 0, 0x1E  )
	ALPG_COMMAND("/T31"           , ALPG_TIMESET  , 0, 0x1F  )

//////////////////////////////////////////////////////////////////

	ALPG_COMMAND("",			ALPG_NOSUPPORT	, 0, 0 )
//ALPG_COMMAND(":",				ALPG_LABEL		, 0, 0 )
//	ALPG_COMMAND(":",			ALPG_COLON		, 0, 0 )
	ALPG_COMMAND("\n",			ALPG_OPLINE		, 0, 0 )
	ALPG_COMMAND(";",			ALPG_OPLINE		, 0, 0 )


//DIAG LATCH ENABLE
	ALPG_COMMAND("DLE"          , ALPG_ETC        , 14, 0 )

//OPEN ASSIGNMENT
	ALPG_COMMAND("XA<0"         , ALPG_OPEN_ASSIGNMENT,  0, 0 )
	ALPG_COMMAND("XD<0"         , ALPG_OPEN_ASSIGNMENT,  0, 0 )
	ALPG_COMMAND("XE<0"         , ALPG_OPEN_ASSIGNMENT,  0, 0 )
	ALPG_COMMAND("XF<0"         , ALPG_OPEN_ASSIGNMENT,  0, 0 )

	ALPG_COMMAND("YA<0"         , ALPG_OPEN_ASSIGNMENT,  0, 0 )
	ALPG_COMMAND("YD<0"         , ALPG_OPEN_ASSIGNMENT,  0, 0 )
	ALPG_COMMAND("YE<0"         , ALPG_OPEN_ASSIGNMENT,  0, 0 )
	ALPG_COMMAND("YF<0"         , ALPG_OPEN_ASSIGNMENT,  0, 0 )

	ALPG_COMMAND("CA<0"         , ALPG_OPEN_ASSIGNMENT,  0, 0 )
	ALPG_COMMAND("CB<0"         , ALPG_OPEN_ASSIGNMENT,  0, 0 )
